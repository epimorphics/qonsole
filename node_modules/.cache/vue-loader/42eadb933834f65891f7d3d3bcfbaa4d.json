{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole2.0/src/components/SPARQL-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/src/components/SPARQL-Editor.vue","mtime":1592831039761},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb2RlRWRpdG9yIGZyb20gJy4vQ29kZS1FZGl0b3IudnVlJwppbXBvcnQgQnV0dG9ucyBmcm9tICcuL0J1dHRvbnMudnVlJwppbXBvcnQgJ3NwYXJxbGpzJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NQQVJRTEVkaXRvcicsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgQ29kZUVkaXRvciwKICAgICAgICBCdXR0b25zCiAgICB9LAogICAgZGF0YSAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbGFuZ3VhZ2U6ICdzcGFycWwnLAogICAgICAgICAgICBjb2RlOiAnJyAKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGJ1dHRvbkNsaWNrZWQgKGJ1dHRvbikgewogICAgICAgICAgICBzd2l0Y2ggKGJ1dHRvbikgewogICAgICAgICAgICAgICAgY2FzZSAiQ2xlYXIiOgogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuY29kZUVkaXRvci5jbGVhckVkaXRvcigpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAiUGVyZm9ybSBRdWVyeSI6CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLnNlbmRDb250ZW50KCk7IAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["SPARQL-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SPARQL-Editor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        Example datasheets: \n        <CodeEditor :language=\"language\" \n            ref=\"codeEditor\" \n            @sendCode=\"code = $event\"/>\n        <Buttons :language=\"language\" \n            @buttonClicked=\"buttonClicked\" />\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue'\nimport 'sparqljs'\n\nexport default {\n    name: 'SPARQLEditor',\n    components: {\n        CodeEditor,\n        Buttons\n    },\n    data () {\n        return {\n            language: 'sparql',\n            code: '' \n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) {\n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor();\n                    break;\n                case \"Perform Query\":\n                    this.$refs.codeEditor.sendContent(); \n            }\n        }\n    }\n}\n</script>"]}]}