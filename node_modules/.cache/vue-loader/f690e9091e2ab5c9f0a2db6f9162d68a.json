{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue","mtime":1598371960272},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":1596446669078},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":1596446670053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNvZGVtaXJyb3IgfSBmcm9tICd2dWUtY29kZW1pcnJvcicKaW1wb3J0ICdjb2RlbWlycm9yL2xpYi9jb2RlbWlycm9yLmNzcycKaW1wb3J0ICdjb2RlbWlycm9yL21vZGUvc3BhcnFsL3NwYXJxbC5qcycKaW1wb3J0ICdjb2RlbWlycm9yL21vZGUvdHVydGxlL3R1cnRsZS5qcycKaW1wb3J0ICdjb2RlbWlycm9yL3RoZW1lL2Jhc2UxNi1saWdodC5jc3MnCgppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS9zdG9yZS5qcycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDb2RlRWRpdG9yJywKICAgIHByb3BzOiBbJ21vZGUnXSwgCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgY29kZW1pcnJvcgogICAgfSwKICAgIHN0b3JlOiBzdG9yZSwgCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNtT3B0aW9uczogewogICAgICAgICAgICAgICAgdGFiU2l6ZTogNCwKICAgICAgICAgICAgICAgIG1vZGU6IHRoaXMubW9kZSwKICAgICAgICAgICAgICAgIHRoZW1lOiAnYmFzZTE2LWxpZ2h0JywKICAgICAgICAgICAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLAogICAgICAgICAgICAgICAgbGluZTogdHJ1ZQogICAgICAgICAgICB9LCAKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIG9uQ21Db2RlQ2hhbmdlKG5ld0NvZGUpIHsKICAgICAgICAgICAgc3dpdGNoICh0aGlzLm1vZGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgJ3R1cnRsZSc6CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JkZkVkaXRvclN0b3JlL3VwZGF0ZUNvZGUnLCBuZXdDb2RlKQogICAgICAgICAgICAgICAgICAgIGJyZWFrOyAKICAgICAgICAgICAgICAgIGNhc2UgJ3NwYXJxbCc6CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3VwZGF0ZUNvZGUnLCBuZXdDb2RlKQogICAgICAgICAgICB9CiAgICAgICAgfSwgICAgICAKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGNvZGVtaXJyb3IoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRyZWZzLmNtRWRpdG9yLmNvZGVtaXJyb3IKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICAvLyBUaGluZ3MgdG8gZG8gd2hlbiB0aGlzIGNvbXBvbmVudCBpcyBsb2FkZWQgCiAgICB9Cn0K"},{"version":3,"sources":["Code-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Code-Editor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <codemirror\n            ref=\"cmEditor\"\n            v-if=\"this.mode=='sparql'\"\n            :value=\"this.$store.getters['sparqlEditorStore/SPARQLCode']\"\n            :options=\"cmOptions\"\n            @input=\"onCmCodeChange\" />\n        <codemirror\n            ref=\"cmEditor\"\n            v-if=\"this.mode=='turtle'\"\n            :value=\"this.$store.getters['rdfEditorStore/turtleCode']\"\n            :options=\"cmOptions\"\n            @input=\"onCmCodeChange\" />\n    </div>\n</template>\n<script>\nimport { codemirror } from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/sparql/sparql.js'\nimport 'codemirror/mode/turtle/turtle.js'\nimport 'codemirror/theme/base16-light.css'\n\nimport store from '@/store/store.js'\n\nexport default {\n    name: 'CodeEditor',\n    props: ['mode'], \n    components: {\n        codemirror\n    },\n    store: store, \n    data() {\n        return {\n            cmOptions: {\n                tabSize: 4,\n                mode: this.mode,\n                theme: 'base16-light',\n                lineNumbers: true,\n                line: true\n            }, \n        }\n    },\n    methods: {\n        onCmCodeChange(newCode) {\n            switch (this.mode) {\n                case 'turtle':\n                    this.$store.dispatch('rdfEditorStore/updateCode', newCode)\n                    break; \n                case 'sparql':\n                    this.$store.dispatch('sparqlEditorStore/updateCode', newCode)\n            }\n        },      \n    },\n    computed: {\n        codemirror() {\n            return this.$refs.cmEditor.codemirror\n        }\n    },\n    mounted() {\n        // Things to do when this component is loaded \n    }\n}\n</script>\n<style>\n.CodeMirror {\n    border: 1px ridge lightgray; \n}\n</style>\n"]}]}