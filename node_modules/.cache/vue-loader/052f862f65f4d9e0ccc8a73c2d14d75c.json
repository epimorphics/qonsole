{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole2.0/src/components/Code-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/src/components/Code-Editor.vue","mtime":1592837132694},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEltcG9ydCBjb2RlbWlycm9yIHNjcmlwdHMgCmltcG9ydCB7IGNvZGVtaXJyb3IgfSBmcm9tICd2dWUtY29kZW1pcnJvcicKaW1wb3J0ICdjb2RlbWlycm9yL2xpYi9jb2RlbWlycm9yLmNzcycKaW1wb3J0ICdjb2RlbWlycm9yL21vZGUvc3BhcnFsL3NwYXJxbC5qcycKaW1wb3J0ICdjb2RlbWlycm9yL21vZGUvdHVydGxlL3R1cnRsZS5qcycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDb2RlRWRpdG9yJywKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBjb2RlbWlycm9yCiAgICB9LAogICAgLy8gR2V0IGxhbmd1YWdlIG1vZGUgZnJvbSBwYXJlbnQgYW5kIGNoYW5nZSB0aGUgbW9kZSBvZiBDb2RlIE1pcnJvciBhY2NvcmRpbmdseSAKICAgIHByb3BzOiBbJ2xhbmd1YWdlJ10sIAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjb2RlIDogJycsIAogICAgICAgICAgICBjbU9wdGlvbnM6IHsKICAgICAgICAgICAgICAgIC8vIENvZGUgTWlycm9yIG9wdGlvbnMgCiAgICAgICAgICAgICAgICB0YWJTaXplOiA0LAogICAgICAgICAgICAgICAgbW9kZTogdGhpcy5sYW5ndWFnZSwKICAgICAgICAgICAgICAgIHRoZW1lOiAnYmFzZTE2LWxpZ2h0JywKICAgICAgICAgICAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLAogICAgICAgICAgICAgICAgbGluZTogdHJ1ZQogICAgICAgICAgICB9LCAKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIG9uQ21SZWFkeShjbSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygndGhlIGVkaXRvciBpcyByZWFkaWVkIScsIGNtKQogICAgICAgIH0sCiAgICAgICAgb25DbUZvY3VzKGNtKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGUgZWRpdG9yIGlzIGZvY3VzZWQhJywgY20pCiAgICAgICAgfSwKICAgICAgICBvbkNtQ29kZUNoYW5nZShuZXdDb2RlKSB7CiAgICAgICAgICAgIC8vIFdyaXRlIGluIGNvbnNvbGUgZm9yIGRlYnVnZ2luZyBwdXJwb3NlcyAKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMgaXMgbmV3IGNvZGUnLCBuZXdDb2RlKQogICAgICAgICAgICB0aGlzLmNvZGUgPSBuZXdDb2RlCiAgICAgICAgfSwKICAgICAgICBjbGVhckVkaXRvcigpIHsKICAgICAgICAgICAgdGhpcy5jb2RlID0gJycgCiAgICAgICAgfSwKICAgICAgICBzZW5kQ29udGVudCgpIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCgnc2VuZENvZGUnLCB0aGlzLmNvZGUpCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgY29kZW1pcnJvcigpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuY21FZGl0b3IuY29kZW1pcnJvcgogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIGNvbnNvbGUubG9nKCd0aGUgY3VycmVudCBDb2RlTWlycm9yIGluc3RhbmNlIG9iamVjdDonLCB0aGlzLmNvZGVtaXJyb3IpCiAgICAgICAgLy8geW91IGNhbiB1c2UgdGhpcy5jb2RlbWlycm9yIHRvIGRvIHNvbWV0aGluZy4uLgogICAgICAgIHN3aXRjaCAodGhpcy5sYW5ndWFnZSkgewogICAgICAgICAgICBjYXNlICJzcGFycWwiOgogICAgICAgICAgICAgICAgdGhpcy5jb2RlID0gJ1BSRUZJWCBmb2FmOiA8aHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS8+ICc7CiAgICAgICAgICAgICAgICBicmVhazsgCiAgICAgICAgICAgIGNhc2UgInR1cnRsZSI6CiAgICAgICAgICAgICAgICB0aGlzLmNvZGUgPSAnQHByZWZpeCByZGY6IDxodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjPiAuJwogICAgICAgIH0KICAgIH0KfQoK"},{"version":3,"sources":["Code-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Code-Editor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <codemirror\n            ref=\"cmEditor\"\n            :value=\"code\"\n            :options=\"cmOptions\"\n            @ready=\"onCmReady\"\n            @focus=\"onCmFocus\"\n            @input=\"onCmCodeChange\"\n        />\n    </div>\n</template>\n<script>\n// Import codemirror scripts \nimport { codemirror } from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/sparql/sparql.js'\nimport 'codemirror/mode/turtle/turtle.js'\n\nexport default {\n    name: 'CodeEditor',\n    components: {\n        codemirror\n    },\n    // Get language mode from parent and change the mode of Code Mirror accordingly \n    props: ['language'], \n    data() {\n        return {\n            code : '', \n            cmOptions: {\n                // Code Mirror options \n                tabSize: 4,\n                mode: this.language,\n                theme: 'base16-light',\n                lineNumbers: true,\n                line: true\n            }, \n        }\n    },\n    methods: {\n        onCmReady(cm) {\n            console.log('the editor is readied!', cm)\n        },\n        onCmFocus(cm) {\n            console.log('the editor is focused!', cm)\n        },\n        onCmCodeChange(newCode) {\n            // Write in console for debugging purposes \n            // console.log('this is new code', newCode)\n            this.code = newCode\n        },\n        clearEditor() {\n            this.code = '' \n        },\n        sendContent() {\n            this.$emit('sendCode', this.code)\n        }\n    },\n    computed: {\n        codemirror() {\n            return this.$refs.cmEditor.codemirror\n        }\n    },\n    mounted() {\n        console.log('the current CodeMirror instance object:', this.codemirror)\n        // you can use this.codemirror to do something...\n        switch (this.language) {\n            case \"sparql\":\n                this.code = 'PREFIX foaf: <http://xmlns.com/foaf/0.1/> ';\n                break; \n            case \"turtle\":\n                this.code = '@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .'\n        }\n    }\n}\n\n</script>\n\n<style>\n@import 'codemirror/theme/base16-light.css'; \n</style>"]}]}