{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue","mtime":1593608358851},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpkaXYgewogICAgbGluZS1oZWlnaHQ6IDI7IAp9Cg=="},{"version":3,"sources":["RDF-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA","file":"RDF-Editor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        This is where the RDF editor will go!\n        <CodeEditor :language=\"language\" \n        ref=\"codeEditor\" \n        @sendCode=\"code = $event\" />\n        <Buttons :language=\"language\"\n            @buttonClicked=\"buttonClicked\" /> \n        <Output />\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue' \nimport Output from './Output.vue'\nimport store from '@/store.js'\n\nconst N3 = require('n3');\n\nfunction parseTurtle(code) {\n    const parser = new N3.Parser();\n    parser.parse(code, \n        (error, quad, prefixes) => {\n            if (error) {\n                store.commit('changeError', true)\n                store.commit('updateErrorMessage', error)\n                return error \n            } else if (prefixes) {\n                var entries = Object.entries(prefixes)\n                console.log(entries)\n                for (var entry in entries) {\n                    store.commit('addPrefix', entry)\n                }\n            } else {\n                store.commit('populateRDFStore', quad)\n            }\n        })\n}\n\nexport default {\n    name: 'RDFEditor',\n    components: {\n        CodeEditor,\n        Buttons,\n        Output \n    },\n    store: store, \n    data () {\n        return {\n            language: 'turtle', \n            parsedRDF: '' \n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) { \n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor(); \n                    break; \n                case \"Load\":\n                    try {\n                        this.$store.commit('clearTurtleStore')\n                        parseTurtle(this.$store.getters.turtleCode)\n                        this.$store.commit('changeError', false)\n                    } catch (error) {\n                        console.log(error)\n                    }\n                    break;\n            }\n        }\n    },\n    mounted: function () {\n        this.$store.commit('updateCurrentLanguage', this.language)\n    }\n}\n</script>\n<style >\ndiv {\n    line-height: 2; \n}\n</style>"]}]}