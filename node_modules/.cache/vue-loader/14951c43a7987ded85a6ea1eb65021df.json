{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/Buttons.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/Buttons.vue","mtime":1596555556442},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/css-loader/dist/cjs.js","mtime":1596446669234},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596446670053},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/postcss-loader/src/index.js","mtime":1596446669636},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":1596446670053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ1dHRvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDsgLyogR3JlZW4gKi8KICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IHdoaXRlOwogIHBhZGRpbmc6IDdweCAxNXB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGZvbnQtc2l6ZTogMTZweDsKICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsKfQo="},{"version":3,"sources":["Buttons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Buttons.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <button class=\"button\" v-for=\"buttonFunction in buttonFunctions\" \n            :key=\"buttonFunction\" \n            v-bind:value=\"buttonFunction\" \n            @click=\"onClick($event.target.value)\"> {{ buttonFunction }} </button>\n    </div>\n</template>\n<script>\nimport store from '@/store/store.js'\n\nexport default {\n    name: 'Buttons',\n    store: store, \n    data () {\n        return {\n            buttonFunctions: []\n        }\n    }, \n    methods: {\n        onClick (buttonFunction) {\n            this.$emit('buttonClicked', buttonFunction)\n        }\n    }, \n    mounted() {\n        switch (this.$store.getters.currentMode) {\n            case 'sparql':\n                this.buttonFunctions = ['Clear', 'Perform Query', 'Save Query To Local', 'Save Query For Later']\n                break; \n            case 'turtle':\n                this.buttonFunctions = ['Clear', 'Load']\n                break;\n            case 'rdfsparql':\n                this.buttonFunctions = ['Clear', 'Query Store', 'Save Query To Local', 'Save Query For Later']\n        }\n    }\n}\n</script>\n<style>\n.button {\n  background-color: #4CAF50; /* Green */\n  border: none;\n  color: white;\n  padding: 7px 15px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border: 1px solid green;\n}\n</style>"]}]}