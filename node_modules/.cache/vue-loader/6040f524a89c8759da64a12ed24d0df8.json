{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/Output.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/Output.vue","mtime":1599491899625},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":1596446669078},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":1596446670053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHcmlkIGZyb20gJ2dyaWRqcy12dWUnCgppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS9zdG9yZS5qcycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdPdXRwdXQnLAogICAgY29tcG9uZW50czogewogICAgICAgIEdyaWQKICAgIH0sCiAgICBzdG9yZTogc3RvcmUsIAogICAgcHJvcHM6IFsnbW9kZSddLCAKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgICAgICAgICAgbGFuZ3VhZ2U6IHt9LAogICAgICAgICAgICBwYWdpbmF0aW9uOiB0cnVlLAogICAgICAgICAgICBzZWFyY2g6IHRydWUsCiAgICAgICAgICAgIHNvcnQ6IHRydWUsCiAgICAgICAgICAgIHRoZW1lOiAnbWVybWFpZCcsCiAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsCiAgICAgICAgfQogICAgfSwKfQo="},{"version":3,"sources":["Output.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Output.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        Triples Loaded: {{this.$store.getters['rdfEditorStore/storeSize']}}\n        Query time: {{this.$store.getters['sparqlEditorStore/localResultTime']}} ms.\n        <div v-show=\"this.$store.getters['sparqlEditorStore/remoteResultIsReady'] && mode=='sparql'\">\n            <grid :cols=\"this.$store.getters['sparqlEditorStore/remoteResultsRows']\"\n                  :rows=\"this.$store.getters['sparqlEditorStore/remoteResultRows']\"\n                  :auto-width=\"autoWidth\"\n                  :language=\"language\"\n                  :pagination=\"pagination\"\n                  :search=\"search\"\n                  :sort=\"sort\"\n                  :width=\"width\" />\n        </div>\n        <div v-show=\"this.$store.getters['sparqlEditorStore/localResultIsReady'] && mode=='turtle'\">\n            <grid :cols=\"this.$store.getters['sparqlEditorStore/localResultCols']\"\n                  :rows=\"this.$store.getters['sparqlEditorStore/localResultRows']\"\n                  :auto-width=\"autoWidth\"\n                  :language=\"language\"\n                  :pagination=\"pagination\"\n                  :search=\"search\"\n                  :sort=\"sort\"\n                  :width=\"width\" />\n        </div>\n\n        <!-- JSON Output -->\n\n        <div>\n            <textarea  type=\"text\" \n                       id=\"output-text\"\n                       rows=\"50\"\n                       v-show=\"this.$store.getters['sparqlEditorStore/outputFormat']=='JSON'\"\n                       readonly=\"true\" \n                       v-model=\"this.$store.getters['sparqlEditorStore/remoteResultJSON']\"/>\n        </div>\n\n        <!-- XML Output -->\n\n        <div>\n            <textarea  type=\"text\" \n                       id=\"output-text\"\n                       rows=\"50\"\n                       v-show=\"this.$store.getters['sparqlEditorStore/outputFormat']=='XML'\"\n                       readonly=\"true\" \n                       v-model=\"this.$store.getters['sparqlEditorStore/remoteResultXML']\"/>\n        </div>\n\n        <!-- CSV Output -->\n        \n        <div>\n            <textarea  type=\"text\" \n                       id=\"output-text\"\n                       rows=\"50\"\n                       v-show=\"this.$store.getters['sparqlEditorStore/outputFormat']=='CSV'\"\n                       readonly=\"true\" \n                       v-model=\"this.$store.getters['sparqlEditorStore/remoteResultCSV']\"/>\n        </div>\n    </div>\n</template>\n<script>\nimport Grid from 'gridjs-vue'\n\nimport store from '@/store/store.js'\n\nexport default {\n    name: 'Output',\n    components: {\n        Grid\n    },\n    store: store, \n    props: ['mode'], \n    data () {\n        return {\n            autoWidth: true,\n            language: {},\n            pagination: true,\n            search: true,\n            sort: true,\n            theme: 'mermaid',\n            width: '100%',\n        }\n    },\n}\n</script>\n<style>\n#output-text {\n    width: 100%;\n    height: auto; \n    background: #ffffff;\n    border: 1px solid grey;\n    padding: 5px;\n}\n</style>"]}]}