{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue","mtime":1594385188791},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb2RlRWRpdG9yIGZyb20gJy4vQ29kZS1FZGl0b3IudnVlJwppbXBvcnQgQnV0dG9ucyBmcm9tICcuL0J1dHRvbnMudnVlJyAKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3N0b3JlL3N0b3JlLmpzJwppbXBvcnQgeyBNdWx0aXBhbmUsIE11bHRpcGFuZVJlc2l6ZXIgfSBmcm9tICd2dWUtbXVsdGlwYW5lJwppbXBvcnQgU1BBUlFMRWRpdG9yIGZyb20gJy4vU1BBUlFMLUVkaXRvci52dWUnCmltcG9ydCBHcmlkIGZyb20gJ2dyaWRqcy12dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnUkRGRWRpdG9yJywKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBNdWx0aXBhbmUsCiAgICAgICAgTXVsdGlwYW5lUmVzaXplciwgCiAgICAgICAgQ29kZUVkaXRvciwKICAgICAgICBCdXR0b25zLAogICAgICAgIFNQQVJRTEVkaXRvciwKICAgICAgICBHcmlkCiAgICB9LAogICAgc3RvcmU6IHN0b3JlLCAKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGxhbmd1YWdlOiAndHVydGxlJywgCiAgICAgICAgICAgIHBhcnNlZFJERjogJycgLAogICAgICAgICAgICByZGZzcGFycWw6IHRydWUsIAogICAgICAgICAgICBhdXRvV2lkdGg6IHRydWUsCiAgICAgICAgICAgIHBhZ2luYXRpb246IHRydWUsCiAgICAgICAgICAgIHNlYXJjaDogdHJ1ZSwKICAgICAgICAgICAgc29ydDogdHJ1ZSwKICAgICAgICAgICAgdGhlbWU6ICdtZXJtYWlkJywKICAgICAgICAgICAgd2lkdGg6ICcxMDAlJywKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGJ1dHRvbkNsaWNrZWQgKGJ1dHRvbikgewogICAgICAgICAgICBzd2l0Y2ggKGJ1dHRvbikgeyAKICAgICAgICAgICAgICAgIGNhc2UgIkNsZWFyIjoKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmNvZGVFZGl0b3IuY2xlYXJFZGl0b3IoKTsgCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7IAogICAgICAgICAgICAgICAgY2FzZSAiTG9hZCI6CiAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjbGVhclR1cnRsZVN0b3JlJykKICAgICAgICAgICAgICAgICAgICAgICAgLy8gcGFyc2VUdXJ0bGUodGhpcy4kc3RvcmUuZ2V0dGVycy50dXJ0bGVDb2RlKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2xvYWRSREYnKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NoYW5nZUVycm9yJywgZmFsc2UpCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBsb2FkVGV4dEZyb21GaWxlOiBmdW5jdGlvbiAoZXYpIHsKICAgICAgICAgICAgY29uc3QgZmlsZSA9IGV2LnRhcmdldC5maWxlc1swXTsKICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGUgPT4gdGhpcy4kc3RvcmUuY29tbWl0KCd1cGRhdGVUdXJ0bGVDb2RlJywgZS50YXJnZXQucmVzdWx0KQogICAgICAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKQogICAgICAgIH0sCiAgICAgICAgZ2V0VmFyaWFibGVzOiBmdW5jdGlvbiAocmVzdWx0cykgewogICAgICAgICAgICB2YXIgdmFyaWFibGVzID0gW10KICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHZhciBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMocmVzdWx0c1swXSkKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVudHJpZXMpCiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVudHJpZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXMucHVzaChlbnRyaWVzW2ldWzBdKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHZhcmlhYmxlcwogICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgICAgICAgfSAKICAgICAgICB9LAogICAgICAgIGdldFJvd3M6IGZ1bmN0aW9uIChyZXN1bHRzKSB7CiAgICAgICAgICAgIHZhciByb3dzID0gW10KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHRzLmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgICAgIHZhciBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMocmVzdWx0c1tpXSkKICAgICAgICAgICAgICAgIHZhciByb3cgPSBbXQogICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBlbnRyaWVzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgcm93LnB1c2goZW50cmllc1tqXVsxXS52YWx1ZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJvd3MucHVzaChyb3cpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJvd3MgCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZUN1cnJlbnRMYW5ndWFnZScsIHRoaXMubGFuZ3VhZ2UpCiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICByZXN1bHRDb2w6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VmFyaWFibGVzKHRoaXMuJHN0b3JlLmdldHRlcnMuc3RvcmVRdWVyeVJlc3VsdCkKICAgICAgICB9LAogICAgICAgIHJlc3VsdFJvdzogZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRSb3dzKHRoaXMuJHN0b3JlLmdldHRlcnMuc3RvcmVRdWVyeVJlc3VsdCkKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["RDF-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RDF-Editor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <Multipane class=\"vertical-panes\" layout=\"vertical\">\n        <div class=\"pane\" >\n            <h3>RDF Editor</h3>\n            <CodeEditor :language=\"language\" \n            ref=\"codeEditor\" \n            @sendCode=\"code = $event\" />\n            <input type=\"file\" @change=\"loadTextFromFile\">\n            <Buttons :language=\"language\"\n                @buttonClicked=\"buttonClicked\" /> \n        </div>\n        <MultipaneResizer></MultipaneResizer>\n        <div class=\"pane\" >\n            <h3>SPARQL Editor</h3>\n            <SPARQLEditor :rdfsparql=\"rdfsparql\"/>\n        </div>\n    </Multipane>        \n    <grid :cols=\"resultCol\" :rows=\"resultRow\" \n          :auto-width=\"autoWidth\"\n          :language=\"{}\"\n          :pagination=\"pagination\"\n          :search=\"search\"\n          :sort=\"sort\"\n          :width=\"width\"\n          v-if=\"this.$store.getters.storeQueryResult!=''\">\n    </grid>\n</div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue' \nimport store from '@/sstore/store.js'\nimport { Multipane, MultipaneResizer } from 'vue-multipane'\nimport SPARQLEditor from './SPARQL-Editor.vue'\nimport Grid from 'gridjs-vue'\n\nexport default {\n    name: 'RDFEditor',\n    components: {\n        Multipane,\n        MultipaneResizer, \n        CodeEditor,\n        Buttons,\n        SPARQLEditor,\n        Grid\n    },\n    store: store, \n    data () {\n        return {\n            language: 'turtle', \n            parsedRDF: '' ,\n            rdfsparql: true, \n            autoWidth: true,\n            pagination: true,\n            search: true,\n            sort: true,\n            theme: 'mermaid',\n            width: '100%',\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) { \n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor(); \n                    break; \n                case \"Load\":\n                    try {\n                        this.$store.commit('clearTurtleStore')\n                        // parseTurtle(this.$store.getters.turtleCode)\n                        this.$store.commit('loadRDF')\n                        this.$store.commit('changeError', false)\n                    } catch (error) {\n                        console.log(error)\n                    }\n                    break;\n            }\n        },\n        loadTextFromFile: function (ev) {\n            const file = ev.target.files[0];\n            const reader = new FileReader();\n            reader.onload = e => this.$store.commit('updateTurtleCode', e.target.result)\n            reader.readAsText(file)\n        },\n        getVariables: function (results) {\n            var variables = []\n            try {\n                var entries = Object.entries(results[0])\n                console.log(entries)\n                for (var i = 0; i < entries.length; i++) {\n                    variables.push(entries[i][0])\n                }\n                return variables\n            } catch (err) {\n                console.log(err)\n            } \n        },\n        getRows: function (results) {\n            var rows = []\n            for (var i = 0; i < results.length; i++){\n                var entries = Object.entries(results[i])\n                var row = []\n                for (var j = 0; j < entries.length; j++) {\n                    row.push(entries[j][1].value)\n                }\n                rows.push(row)\n            }\n            return rows \n        }\n    },\n    mounted: function () {\n        this.$store.commit('updateCurrentLanguage', this.language)\n    },\n    computed: {\n        resultCol: function () {\n            return this.getVariables(this.$store.getters.storeQueryResult)\n        },\n        resultRow: function () {\n            return this.getRows(this.$store.getters.storeQueryResult)\n        }\n    }\n}\n</script>\n<style >\ndiv {\n    line-height: 1.5; \n}\n.vertical-panes {\n  width: 100%;\n  height: 450px;\n  border: 1px solid #ccc;\n}\n.vertical-panes > .pane {\n    width: 50%; \n    text-align: left;\n    padding: 15px;\n    overflow: hidden;\n    background: #eee;\n}\n.vertical-panes > .pane ~ .pane {\n  border-left: 1px solid #ccc;\n}\n</style>"]}]}