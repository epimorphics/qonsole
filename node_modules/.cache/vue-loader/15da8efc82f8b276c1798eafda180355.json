{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue","mtime":1593440386999},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKZGl2IHsKICAgIGxpbmUtaGVpZ2h0OiAyOyAKfQo="},{"version":3,"sources":["SPARQL-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA","file":"SPARQL-Editor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        Example datasheets: \n        <CodeEditor :language=\"language\" \n                    ref=\"codeEditor\" \n                    @sendCode=\"code = $event\"/>\n        <label for=\"endpoint\">SPARQL Endpoint: </label>\n        <input type=\"text\" id=\"endpoint\" name=\"endpoint\" v-model=\"endpoint\">\n        <Buttons :language=\"language\" \n                 @buttonClicked=\"buttonClicked\" />\n\n        <select v-model=\"resultTypes.selectedOption\">\n            <option v-for=\"type in resultTypes.options\" \n                    :value=\"type\" \n                    :key=\"type\"> {{ type }} </option>\n        </select>\n        <Output ref=\"output\" :jsonResponse=\"jsonResponse\"/>\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue'\nimport Output from './Output.vue'\nimport {makeQuery, sendQuery} from '@/query.js'\n\nexport default {\n    name: 'SPARQLEditor',\n    components: {\n        CodeEditor,\n        Buttons,\n        Output\n    },\n    data () {\n        return {\n            language: 'sparql',\n            code: '',\n            endpoint: 'http://dbpedia.org/sparql',\n            resultTypes: { options: ['JSON'],\n                           selectedOption: 'JSON'} ,\n            jsonResponse: [],\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) {\n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor();\n                    break;\n                case \"Perform Query\":\n                    // Get code from code mirror \n                    this.$refs.codeEditor.sendContent(); \n                    // Send SPARQL query to SPARQL endpoint with the user decided output format\n                    var queryURL = makeQuery(this.code, this.endpoint, this.resultTypes.selectedOption)\n                    this.jsonResponse = JSON.parse(sendQuery(queryURL))\n            }\n        }, \n    }\n}\n</script>\n<style>\ndiv {\n    line-height: 2; \n}\n</style>"]}]}