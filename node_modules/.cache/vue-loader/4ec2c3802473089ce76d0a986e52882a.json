{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue?vue&type=template&id=eb3c94de&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue","mtime":1594309177812},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgIHZhbHVlOiAhX3ZtLnJkZnNwYXJxbCwKICAgICAgICAgICAgZXhwcmVzc2lvbjogIiFyZGZzcGFycWwiCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICBbCiAgICAgICAgX3ZtLl92KCIgRXhhbXBsZSBkYXRhc2hlZXRzOiAiKSwKICAgICAgICBfYygiQ29kZUVkaXRvciIsIHsKICAgICAgICAgIHJlZjogImNvZGVFZGl0b3IiLAogICAgICAgICAgYXR0cnM6IHsgbGFuZ3VhZ2U6IF92bS5sYW5ndWFnZSB9CiAgICAgICAgfSksCiAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJlbmRwb2ludCIgfSB9LCBbX3ZtLl92KCJRdWVyeSBmcm9tOiAiKV0pLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0uZW5kcG9pbnQsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImVuZHBvaW50IgogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiLCBpZDogImVuZHBvaW50IiwgbmFtZTogImVuZHBvaW50IiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5lbmRwb2ludCB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF92bS5lbmRwb2ludCA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJmaWxlIiB9LAogICAgICAgICAgb246IHsgY2hhbmdlOiBfdm0ubG9hZFRleHRGcm9tRmlsZSB9CiAgICAgICAgfSksCiAgICAgICAgX2MoIkJ1dHRvbnMiLCB7CiAgICAgICAgICBhdHRyczogeyBsYW5ndWFnZTogX3ZtLmxhbmd1YWdlIH0sCiAgICAgICAgICBvbjogeyBidXR0b25DbGlja2VkOiBfdm0uYnV0dG9uQ2xpY2tlZCB9CiAgICAgICAgfSksCiAgICAgICAgX2MoCiAgICAgICAgICAic2VsZWN0IiwKICAgICAgICAgIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnJlc3VsdFR5cGVzLnNlbGVjdGVkT3B0aW9uLAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInJlc3VsdFR5cGVzLnNlbGVjdGVkT3B0aW9uIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgdmFyICQkc2VsZWN0ZWRWYWwgPSBBcnJheS5wcm90b3R5cGUuZmlsdGVyCiAgICAgICAgICAgICAgICAgIC5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucywgZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBvLnNlbGVjdGVkCiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSAiX3ZhbHVlIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbAogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgX3ZtLiRzZXQoCiAgICAgICAgICAgICAgICAgIF92bS5yZXN1bHRUeXBlcywKICAgICAgICAgICAgICAgICAgInNlbGVjdGVkT3B0aW9uIiwKICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC5tdWx0aXBsZSA/ICQkc2VsZWN0ZWRWYWwgOiAkJHNlbGVjdGVkVmFsWzBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgX3ZtLl9sKF92bS5yZXN1bHRUeXBlcy5vcHRpb25zLCBmdW5jdGlvbih0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiBfYygib3B0aW9uIiwgeyBrZXk6IHR5cGUsIGRvbVByb3BzOiB7IHZhbHVlOiB0eXBlIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3ModHlwZSkgKyAiICIpCiAgICAgICAgICAgIF0pCiAgICAgICAgICB9KSwKICAgICAgICAgIDAKICAgICAgICApLAogICAgICAgIF9jKCJPdXRwdXQiLCB7IHJlZjogIm91dHB1dCIgfSkKICAgICAgXSwKICAgICAgMQogICAgKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgewogICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgdmFsdWU6IF92bS5yZGZzcGFycWwsCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJyZGZzcGFycWwiCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICBbCiAgICAgICAgX3ZtLl92KCIgRXhhbXBsZSBkYXRhc2hlZXRzOiAiKSwKICAgICAgICBfYygiQ29kZUVkaXRvciIsIHsKICAgICAgICAgIHJlZjogImNvZGVFZGl0b3IiLAogICAgICAgICAgYXR0cnM6IHsgbGFuZ3VhZ2U6IF92bS5sYW5ndWFnZSB9CiAgICAgICAgfSksCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgYXR0cnM6IHsgdHlwZTogImZpbGUiIH0sCiAgICAgICAgICBvbjogeyBjaGFuZ2U6IF92bS5sb2FkVGV4dEZyb21GaWxlIH0KICAgICAgICB9KSwKICAgICAgICBfYygiQnV0dG9ucyIsIHsKICAgICAgICAgIGF0dHJzOiB7IGxhbmd1YWdlOiAicmRmc3BhcnFsIiB9LAogICAgICAgICAgb246IHsgYnV0dG9uQ2xpY2tlZDogX3ZtLmJ1dHRvbkNsaWNrZWQgfQogICAgICAgIH0pCiAgICAgIF0sCiAgICAgIDEKICAgICkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}