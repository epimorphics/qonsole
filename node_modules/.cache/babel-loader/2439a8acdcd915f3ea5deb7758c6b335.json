{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue","mtime":1594307764465},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ29kZUVkaXRvciBmcm9tICcuL0NvZGUtRWRpdG9yLnZ1ZSc7CmltcG9ydCBCdXR0b25zIGZyb20gJy4vQnV0dG9ucy52dWUnOwppbXBvcnQgT3V0cHV0IGZyb20gJy4vT3V0cHV0LnZ1ZSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlLmpzJzsKaW1wb3J0IHsgTXVsdGlwYW5lLCBNdWx0aXBhbmVSZXNpemVyIH0gZnJvbSAndnVlLW11bHRpcGFuZSc7CmltcG9ydCBTUEFSUUxFZGl0b3IgZnJvbSAnLi9TUEFSUUwtRWRpdG9yLnZ1ZSc7CmltcG9ydCBHcmlkIGZyb20gJ2dyaWRqcy12dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1JERkVkaXRvcicsCiAgY29tcG9uZW50czogewogICAgTXVsdGlwYW5lOiBNdWx0aXBhbmUsCiAgICBNdWx0aXBhbmVSZXNpemVyOiBNdWx0aXBhbmVSZXNpemVyLAogICAgQ29kZUVkaXRvcjogQ29kZUVkaXRvciwKICAgIEJ1dHRvbnM6IEJ1dHRvbnMsCiAgICBPdXRwdXQ6IE91dHB1dCwKICAgIFNQQVJRTEVkaXRvcjogU1BBUlFMRWRpdG9yLAogICAgR3JpZDogR3JpZAogIH0sCiAgc3RvcmU6IHN0b3JlLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYW5ndWFnZTogJ3R1cnRsZScsCiAgICAgIHBhcnNlZFJERjogJycsCiAgICAgIHJkZnNwYXJxbDogdHJ1ZSwKICAgICAgYXV0b1dpZHRoOiB0cnVlLAogICAgICBwYWdpbmF0aW9uOiB0cnVlLAogICAgICBzZWFyY2g6IHRydWUsCiAgICAgIHNvcnQ6IHRydWUsCiAgICAgIHRoZW1lOiAnbWVybWFpZCcsCiAgICAgIHdpZHRoOiAnMTAwJScKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBidXR0b25DbGlja2VkOiBmdW5jdGlvbiBidXR0b25DbGlja2VkKGJ1dHRvbikgewogICAgICBzd2l0Y2ggKGJ1dHRvbikgewogICAgICAgIGNhc2UgIkNsZWFyIjoKICAgICAgICAgIHRoaXMuJHJlZnMuY29kZUVkaXRvci5jbGVhckVkaXRvcigpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgIkxvYWQiOgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjbGVhclR1cnRsZVN0b3JlJyk7IC8vIHBhcnNlVHVydGxlKHRoaXMuJHN0b3JlLmdldHRlcnMudHVydGxlQ29kZSkKCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnbG9hZFJERicpOwogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NoYW5nZUVycm9yJywgZmFsc2UpOwogICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgfQoKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgbG9hZFRleHRGcm9tRmlsZTogZnVuY3Rpb24gbG9hZFRleHRGcm9tRmlsZShldikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGZpbGUgPSBldi50YXJnZXQuZmlsZXNbMF07CiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZVR1cnRsZUNvZGUnLCBlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwoKICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7CiAgICB9LAogICAgZ2V0VmFyaWFibGVzOiBmdW5jdGlvbiBnZXRWYXJpYWJsZXMocmVzdWx0cykgewogICAgICB2YXIgdmFyaWFibGVzID0gW107CgogICAgICB0cnkgewogICAgICAgIHZhciBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMocmVzdWx0c1swXSk7CiAgICAgICAgY29uc29sZS5sb2coZW50cmllcyk7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgdmFyaWFibGVzLnB1c2goZW50cmllc1tpXVswXSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdmFyaWFibGVzOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9CiAgICB9LAogICAgZ2V0Um93czogZnVuY3Rpb24gZ2V0Um93cyhyZXN1bHRzKSB7CiAgICAgIHZhciByb3dzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHJlc3VsdHNbaV0pOwogICAgICAgIHZhciByb3cgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBlbnRyaWVzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICByb3cucHVzaChlbnRyaWVzW2pdWzFdLnZhbHVlKTsKICAgICAgICB9CgogICAgICAgIHJvd3MucHVzaChyb3cpOwogICAgICB9CgogICAgICByZXR1cm4gcm93czsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZUN1cnJlbnRMYW5ndWFnZScsIHRoaXMubGFuZ3VhZ2UpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJlc3VsdENvbDogZnVuY3Rpb24gcmVzdWx0Q29sKCkgewogICAgICByZXR1cm4gdGhpcy5nZXRWYXJpYWJsZXModGhpcy4kc3RvcmUuZ2V0dGVycy5zdG9yZVF1ZXJ5UmVzdWx0KTsKICAgIH0sCiAgICByZXN1bHRSb3c6IGZ1bmN0aW9uIHJlc3VsdFJvdygpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0Um93cyh0aGlzLiRzdG9yZS5nZXR0ZXJzLnN0b3JlUXVlcnlSZXN1bHQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["RDF-Editor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <Multipane class=\"vertical-panes\" layout=\"vertical\">\n        <div class=\"pane\" >\n            <CodeEditor :language=\"language\" \n            ref=\"codeEditor\" \n            @sendCode=\"code = $event\" />\n            <input type=\"file\" @change=\"loadTextFromFile\">\n            <Buttons :language=\"language\"\n                @buttonClicked=\"buttonClicked\" /> \n        </div>\n        <MultipaneResizer></MultipaneResizer>\n        <div class=\"pane\" >\n            <SPARQLEditor :rdfsparql=\"rdfsparql\"/>\n        </div>\n    </Multipane>        \n    <grid :cols=\"resultCol\" :rows=\"resultRow\" \n          :auto-width=\"autoWidth\"\n          :language=\"{}\"\n          :pagination=\"pagination\"\n          :search=\"search\"\n          :sort=\"sort\"\n          :width=\"width\"\n          v-if=\"this.$store.getters.storeQueryResult!=''\">\n    </grid>\n</div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue' \nimport Output from './Output.vue'\nimport store from '@/store.js'\nimport { Multipane, MultipaneResizer } from 'vue-multipane'\nimport SPARQLEditor from './SPARQL-Editor.vue'\nimport Grid from 'gridjs-vue'\n\nexport default {\n    name: 'RDFEditor',\n    components: {\n        Multipane,\n        MultipaneResizer, \n        CodeEditor,\n        Buttons,\n        Output,\n        SPARQLEditor,\n        Grid\n    },\n    store: store, \n    data () {\n        return {\n            language: 'turtle', \n            parsedRDF: '' ,\n            rdfsparql: true, \n            autoWidth: true,\n            pagination: true,\n            search: true,\n            sort: true,\n            theme: 'mermaid',\n            width: '100%',\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) { \n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor(); \n                    break; \n                case \"Load\":\n                    try {\n                        this.$store.commit('clearTurtleStore')\n                        // parseTurtle(this.$store.getters.turtleCode)\n                        this.$store.commit('loadRDF')\n                        this.$store.commit('changeError', false)\n                    } catch (error) {\n                        console.log(error)\n                    }\n                    break;\n            }\n        },\n        loadTextFromFile: function (ev) {\n            const file = ev.target.files[0];\n            const reader = new FileReader();\n            reader.onload = e => this.$store.commit('updateTurtleCode', e.target.result)\n            reader.readAsText(file)\n        },\n        getVariables: function (results) {\n            var variables = []\n            try {\n                var entries = Object.entries(results[0])\n                console.log(entries)\n                for (var i = 0; i < entries.length; i++) {\n                    variables.push(entries[i][0])\n                }\n                return variables\n            } catch (err) {\n                console.log(err)\n            } \n        },\n        getRows: function (results) {\n            var rows = []\n            for (var i = 0; i < results.length; i++){\n                var entries = Object.entries(results[i])\n                var row = []\n                for (var j = 0; j < entries.length; j++) {\n                    row.push(entries[j][1].value)\n                }\n                rows.push(row)\n            }\n            return rows \n        }\n    },\n    mounted: function () {\n        this.$store.commit('updateCurrentLanguage', this.language)\n    },\n    computed: {\n        resultCol: function () {\n            return this.getVariables(this.$store.getters.storeQueryResult)\n        },\n        resultRow: function () {\n            return this.getRows(this.$store.getters.storeQueryResult)\n        }\n    }\n}\n</script>\n<style >\ndiv {\n    line-height: 1.5; \n}\n.vertical-panes {\n  width: 100%;\n  height: 400px;\n  border: 1px solid #ccc;\n}\n.vertical-panes > .pane {\n    width: 50%; \n    text-align: left;\n    padding: 15px;\n    overflow: hidden;\n    background: #eee;\n}\n.vertical-panes > .pane ~ .pane {\n  border-left: 1px solid #ccc;\n}\n</style>"],"sourceRoot":"src/components"}]}