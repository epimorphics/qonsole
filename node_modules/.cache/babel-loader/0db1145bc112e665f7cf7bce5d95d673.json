{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue","mtime":1598613684230},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js","mtime":1596446670016},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":1596446669078},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":1596446670053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgY29kZW1pcnJvciB9IGZyb20gJ3Z1ZS1jb2RlbWlycm9yJzsKaW1wb3J0ICdjb2RlbWlycm9yL2xpYi9jb2RlbWlycm9yLmNzcyc7CmltcG9ydCAnY29kZW1pcnJvci9tb2RlL3NwYXJxbC9zcGFycWwuanMnOwppbXBvcnQgJ2NvZGVtaXJyb3IvbW9kZS90dXJ0bGUvdHVydGxlLmpzJzsKaW1wb3J0ICdjb2RlbWlycm9yL3RoZW1lL2Jhc2UxNi1saWdodC5jc3MnOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS9zdG9yZS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29kZUVkaXRvcicsCiAgcHJvcHM6IFsnbW9kZSddLAogIGNvbXBvbmVudHM6IHsKICAgIGNvZGVtaXJyb3I6IGNvZGVtaXJyb3IKICB9LAogIHN0b3JlOiBzdG9yZSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY21PcHRpb25zOiB7CiAgICAgICAgdGFiU2l6ZTogNCwKICAgICAgICBtb2RlOiB0aGlzLm1vZGUsCiAgICAgICAgdGhlbWU6ICdiYXNlMTYtbGlnaHQnLAogICAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLAogICAgICAgIGxpbmU6IHRydWUKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ21Db2RlQ2hhbmdlOiBmdW5jdGlvbiBvbkNtQ29kZUNoYW5nZShuZXdDb2RlKSB7CiAgICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7CiAgICAgICAgY2FzZSAndHVydGxlJzoKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdyZGZFZGl0b3JTdG9yZS91cGRhdGVDb2RlJywgbmV3Q29kZSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnc3BhcnFsJzoKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzcGFycWxFZGl0b3JTdG9yZS91cGRhdGVDb2RlJywgbmV3Q29kZSk7CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb2RlbWlycm9yOiBmdW5jdGlvbiBjb2RlbWlycm9yKCkgewogICAgICByZXR1cm4gdGhpcy4kcmVmcy5jbUVkaXRvci5jb2RlbWlycm9yOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsvLyBUaGluZ3MgdG8gZG8gd2hlbiB0aGlzIGNvbXBvbmVudCBpcyBsb2FkZWQgCiAgfQp9Ow=="},{"version":3,"sources":["Code-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,SAAA,UAAA,QAAA,gBAAA;AACA,OAAA,+BAAA;AACA,OAAA,kCAAA;AACA,OAAA,kCAAA;AACA,OAAA,mCAAA;AAEA,OAAA,KAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAHA;AAMA,EAAA,KAAA,EAAA,KANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,OAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,KAAA,IAFA;AAGA,QAAA,KAAA,EAAA,cAHA;AAIA,QAAA,WAAA,EAAA,IAJA;AAKA,QAAA,IAAA,EAAA;AALA;AADA,KAAA;AASA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,OADA,EACA;AACA,cAAA,KAAA,IAAA;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,OAAA;AACA;;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,8BAAA,EAAA,OAAA;AALA;AAOA;AATA,GAlBA;AA6BA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,KAAA,CAAA,QAAA,CAAA,UAAA;AACA;AAHA,GA7BA;AAkCA,EAAA,OAlCA,qBAkCA,CACA;AACA;AApCA,CAAA","sourcesContent":["<template>\n    <div>\n        <codemirror\n            ref=\"cmEditor\"\n            v-if=\"this.mode=='sparql'\"\n            :value=\"this.$store.getters['sparqlEditorStore/SPARQLCode']\"\n            :options=\"cmOptions\"\n            @input=\"onCmCodeChange\" />\n        <codemirror\n            ref=\"cmEditor\"\n            v-if=\"this.mode=='turtle'\"\n            :value=\"this.$store.getters['rdfEditorStore/turtleCode']\"\n            :options=\"cmOptions\"\n            @input=\"onCmCodeChange\" />\n    </div>\n</template>\n<script>\nimport { codemirror } from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/sparql/sparql.js'\nimport 'codemirror/mode/turtle/turtle.js'\nimport 'codemirror/theme/base16-light.css'\n\nimport store from '@/store/store.js'\n\nexport default {\n    name: 'CodeEditor',\n    props: ['mode'], \n    components: {\n        codemirror\n    },\n    store: store, \n    data() {\n        return {\n            cmOptions: {\n                tabSize: 4,\n                mode: this.mode,\n                theme: 'base16-light',\n                lineNumbers: true,\n                line: true\n            }, \n        }\n    },\n    methods: {\n        onCmCodeChange(newCode) {\n            switch (this.mode) {\n                case 'turtle':\n                    this.$store.dispatch('rdfEditorStore/updateCode', newCode)\n                    break; \n                case 'sparql':\n                    this.$store.dispatch('sparqlEditorStore/updateCode', newCode)\n            }\n        },      \n    },\n    computed: {\n        codemirror() {\n            return this.$refs.cmEditor.codemirror\n        }\n    },\n    mounted() {\n        // Things to do when this component is loaded \n    }\n}\n</script>\n<style>\n.CodeMirror {\n    border: 1px ridge lightgray; \n}\n</style>\n"],"sourceRoot":"src/components"}]}