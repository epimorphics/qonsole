{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue","mtime":1593094979738},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDb2RlRWRpdG9yIGZyb20gJy4vQ29kZS1FZGl0b3IudnVlJzsKaW1wb3J0IEJ1dHRvbnMgZnJvbSAnLi9CdXR0b25zLnZ1ZSc7CmltcG9ydCBPdXRwdXQgZnJvbSAnLi9PdXRwdXQudnVlJzsgLy8gaW1wb3J0ICdzcGFycWxqcycKCmltcG9ydCBzcGFycWxRdWVyeSBmcm9tICdAL3F1ZXJ5LmpzJzsgLy8gdmFyIFNwYXJxbFBhcnNlciA9IHJlcXVpcmUoJ3NwYXJxbGpzJykuUGFyc2VyOwovLyB2YXIgcGFyc2VyID0gbmV3IFNwYXJxbFBhcnNlcigpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTUEFSUUxFZGl0b3InLAogIGNvbXBvbmVudHM6IHsKICAgIENvZGVFZGl0b3I6IENvZGVFZGl0b3IsCiAgICBCdXR0b25zOiBCdXR0b25zLAogICAgT3V0cHV0OiBPdXRwdXQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYW5ndWFnZTogJ3NwYXJxbCcsCiAgICAgIGNvZGU6ICcnLAogICAgICBwYXJzZWRRdWVyeTogJycsCiAgICAgIGVuZHBvaW50OiAnaHR0cDovL2RicGVkaWEub3JnL3NwYXJxbCcsCiAgICAgIHJlcXVlc3Q6IFhNTEh0dHBSZXF1ZXN0KCksCiAgICAgIHJlc3VsdFR5cGVzOiB7CiAgICAgICAgb3B0aW9uczogWydYTUwnLCAnSlNPTicsICdDU1YnXSwKICAgICAgICBzZWxlY3RlZE9wdGlvbjogJ1hNTCcKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uIGJ1dHRvbkNsaWNrZWQoYnV0dG9uKSB7CiAgICAgIHN3aXRjaCAoYnV0dG9uKSB7CiAgICAgICAgY2FzZSAiQ2xlYXIiOgogICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLmNsZWFyRWRpdG9yKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiUGVyZm9ybSBRdWVyeSI6CiAgICAgICAgICB0aGlzLiRyZWZzLmNvZGVFZGl0b3Iuc2VuZENvbnRlbnQoKTsKICAgICAgICAgIHRoaXMucmVxdWVzdCA9IHNwYXJxbFF1ZXJ5KHRoaXMuY29kZSwgdGhpcy5lbmRwb2ludCwgdGhpcy5yZXN1bHRUeXBlcy5zZWxlY3RlZE9wdGlvbi5yZXBsYWNlKC9bJyJdKy9nLCAnJykpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SPARQL-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,MAAA,MAAA,cAAA,C,CACA;;AACA,OAAA,WAAA,MAAA,YAAA,C,CAEA;AACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,MAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,2BAJA;AAKA,MAAA,OAAA,EAAA,cAAA,EALA;AAMA,MAAA,WAAA,EAAA;AAAA,QAAA,OAAA,EAAA,CAAA,KAAA,EAAA,MAAA,EAAA,KAAA,CAAA;AACA,QAAA,cAAA,EAAA;AADA;AANA,KAAA;AASA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,cAAA,MAAA;AACA,aAAA,OAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA;;AACA,aAAA,eAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA,eAAA,OAAA,GAAA,WAAA,CAAA,KAAA,IAAA,EAAA,KAAA,QAAA,EAAA,KAAA,WAAA,CAAA,cAAA,CAAA,OAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AANA;AAQA;AAVA;AAlBA,CAAA","sourcesContent":["<template>\n    <div>\n        Example datasheets: \n        <CodeEditor :language=\"language\" \n                    ref=\"codeEditor\" \n                    @sendCode=\"code = $event\"/>\n        <label for=\"endpoint\">SPARQL Endpoint: </label>\n        <input type=\"text\" id=\"endpoint\" name=\"endpoint\" v-model=\"endpoint\">\n        <Buttons :language=\"language\" \n                 @buttonClicked=\"buttonClicked\" />\n\n        <select v-model=\"resultTypes.selectedOption\">\n            <option v-for=\"type in resultTypes.options\" \n                    :value=\"type\" \n                    :key=\"type\"> {{ type }} </option>\n        </select>\n        <Output :request=\"request\" :resultType=\"resultTypes.selectedOption\" />\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue'\nimport Output from './Output.vue'\n// import 'sparqljs'\nimport sparqlQuery from '@/query.js'\n\n// var SparqlParser = require('sparqljs').Parser;\n// var parser = new SparqlParser();\n\nexport default {\n    name: 'SPARQLEditor',\n    components: {\n        CodeEditor,\n        Buttons,\n        Output\n    },\n    data () {\n        return {\n            language: 'sparql',\n            code: '',\n            parsedQuery: '',\n            endpoint: 'http://dbpedia.org/sparql',\n            request: XMLHttpRequest(),\n            resultTypes: { options: ['XML', 'JSON', 'CSV'],\n                           selectedOption: 'XML'} ,\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) {\n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor();\n                    break;\n                case \"Perform Query\":\n                    this.$refs.codeEditor.sendContent(); \n                    this.request = sparqlQuery(this.code, this.endpoint, this.resultTypes.selectedOption.replace(/['\"]+/g, ''))\n            }\n        }, \n    }\n}\n</script>\n<style>\ndiv {\n    line-height: 2; \n}\n</style>"],"sourceRoot":"src/components"}]}