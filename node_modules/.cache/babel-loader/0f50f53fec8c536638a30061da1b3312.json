{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue","mtime":1592915945780},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvZGVFZGl0b3IgZnJvbSAnLi9Db2RlLUVkaXRvci52dWUnOwppbXBvcnQgQnV0dG9ucyBmcm9tICcuL0J1dHRvbnMudnVlJzsKaW1wb3J0ICdyZGYnOwoKdmFyIHJkZiA9IHJlcXVpcmUoJ3JkZicpOyAvLyBjb25zdCB7IE5hbWVkTm9kZSwgQmxhbmtOb2RlLCBMaXRlcmFsIH0gPSByZGY7CgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSREZFZGl0b3InLAogIGNvbXBvbmVudHM6IHsKICAgIENvZGVFZGl0b3I6IENvZGVFZGl0b3IsCiAgICBCdXR0b25zOiBCdXR0b25zCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGFuZ3VhZ2U6ICd0dXJ0bGUnLAogICAgICBjb2RlOiAnJywKICAgICAgcGFyc2VkUkRGOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uIGJ1dHRvbkNsaWNrZWQoYnV0dG9uKSB7CiAgICAgIHN3aXRjaCAoYnV0dG9uKSB7CiAgICAgICAgY2FzZSAiQ2xlYXIiOgogICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLmNsZWFyRWRpdG9yKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiTG9hZCI6CiAgICAgICAgICB0aGlzLiRyZWZzLmNvZGVFZGl0b3Iuc2VuZENvbnRlbnQoKTsKICAgICAgICAgIHRoaXMucGFyc2VkUkRGID0gcmRmLlR1cnRsZVBhcnNlci5wYXJzZSh0aGlzLmNvZGUpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["RDF-Editor.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,KAAA;;AAEA,IAAA,GAAA,GAAA,OAAA,CAAA,KAAA,CAAA,C,CACA;;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA;AAHA,KAAA;AAKA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,cAAA,MAAA;AACA,aAAA,OAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA;;AACA,aAAA,MAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA,eAAA,SAAA,GAAA,GAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AANA;AASA;AAXA;AAbA,CAAA","sourcesContent":["<template>\n    <div>\n        This is where the RDF editor will go!\n        <CodeEditor :language=\"language\" \n        ref=\"codeEditor\" \n        @sendCode=\"code = $event\" />\n        <Buttons :language=\"language\"\n            @buttonClicked=\"buttonClicked\" /> \n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue' \nimport 'rdf'\n\nconst rdf = require('rdf')\n// const { NamedNode, BlankNode, Literal } = rdf;\n\nexport default {\n    name: 'RDFEditor',\n    components: {\n        CodeEditor,\n        Buttons \n    },\n    data () {\n        return {\n            language: 'turtle', \n            code: '',\n            parsedRDF: '' \n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) { \n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor(); \n                    break; \n                case \"Load\":\n                    this.$refs.codeEditor.sendContent(); \n                    this.parsedRDF = rdf.TurtleParser.parse(this.code)\n\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}