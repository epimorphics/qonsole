{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue","mtime":1593432132812},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvZGVFZGl0b3IgZnJvbSAnLi9Db2RlLUVkaXRvci52dWUnOwppbXBvcnQgQnV0dG9ucyBmcm9tICcuL0J1dHRvbnMudnVlJzsKaW1wb3J0IE91dHB1dCBmcm9tICcuL091dHB1dC52dWUnOwppbXBvcnQgeyBtYWtlUXVlcnksIHNlbmRRdWVyeSB9IGZyb20gJ0AvcXVlcnkuanMnOwppbXBvcnQgeyBkZWNvbnN0cnVjdEpTT04sIGdldFZhcmlhYmxlcyB9IGZyb20gJ0AvcmVzdWx0LmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTUEFSUUxFZGl0b3InLAogIGNvbXBvbmVudHM6IHsKICAgIENvZGVFZGl0b3I6IENvZGVFZGl0b3IsCiAgICBCdXR0b25zOiBCdXR0b25zLAogICAgT3V0cHV0OiBPdXRwdXQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYW5ndWFnZTogJ3NwYXJxbCcsCiAgICAgIGNvZGU6ICcnLAogICAgICBlbmRwb2ludDogJ2h0dHA6Ly9kYnBlZGlhLm9yZy9zcGFycWwnLAogICAgICByZXN1bHRUeXBlczogewogICAgICAgIG9wdGlvbnM6IFsnSlNPTiddLAogICAgICAgIHNlbGVjdGVkT3B0aW9uOiAnSlNPTicKICAgICAgfSwKICAgICAganNvblJlc3BvbnNlOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uIGJ1dHRvbkNsaWNrZWQoYnV0dG9uKSB7CiAgICAgIHN3aXRjaCAoYnV0dG9uKSB7CiAgICAgICAgY2FzZSAiQ2xlYXIiOgogICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLmNsZWFyRWRpdG9yKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiUGVyZm9ybSBRdWVyeSI6CiAgICAgICAgICAvLyBHZXQgY29kZSBmcm9tIGNvZGUgbWlycm9yIAogICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLnNlbmRDb250ZW50KCk7IC8vIFNlbmQgU1BBUlFMIHF1ZXJ5IHRvIFNQQVJRTCBlbmRwb2ludCB3aXRoIHRoZSB1c2VyIGRlY2lkZWQgb3V0cHV0IGZvcm1hdAoKICAgICAgICAgIHZhciBxdWVyeVVSTCA9IG1ha2VRdWVyeSh0aGlzLmNvZGUsIHRoaXMuZW5kcG9pbnQsIHRoaXMucmVzdWx0VHlwZXMuc2VsZWN0ZWRPcHRpb24pOwogICAgICAgICAgdGhpcy5qc29uUmVzcG9uc2UgPSBKU09OLnBhcnNlKHNlbmRRdWVyeShxdWVyeVVSTCkpOwogICAgICAgICAgdGhpcy4kcmVmcy5vdXRwdXQubWFrZVRhYmxlKGRlY29uc3RydWN0SlNPTih0aGlzLmpzb25SZXNwb25zZSksIGdldFZhcmlhYmxlcyh0aGlzLmpzb25SZXNwb25zZSkpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SPARQL-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,MAAA,MAAA,cAAA;AACA,SAAA,SAAA,EAAA,SAAA,QAAA,YAAA;AACA,SAAA,eAAA,EAAA,YAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,MAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,2BAHA;AAIA,MAAA,WAAA,EAAA;AAAA,QAAA,OAAA,EAAA,CAAA,MAAA,CAAA;AACA,QAAA,cAAA,EAAA;AADA,OAJA;AAMA,MAAA,YAAA,EAAA;AANA,KAAA;AAQA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,cAAA,MAAA;AACA,aAAA,OAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA;;AACA,aAAA,eAAA;AACA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA,GAFA,CAGA;;AACA,cAAA,QAAA,GAAA,SAAA,CAAA,KAAA,IAAA,EAAA,KAAA,QAAA,EAAA,KAAA,WAAA,CAAA,cAAA,CAAA;AACA,eAAA,YAAA,GAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,eAAA,CAAA,KAAA,YAAA,CAAA,EAAA,YAAA,CAAA,KAAA,YAAA,CAAA;AAVA;AAYA;AAdA;AAjBA,CAAA","sourcesContent":["<template>\n    <div>\n        Example datasheets: \n        <CodeEditor :language=\"language\" \n                    ref=\"codeEditor\" \n                    @sendCode=\"code = $event\"/>\n        <label for=\"endpoint\">SPARQL Endpoint: </label>\n        <input type=\"text\" id=\"endpoint\" name=\"endpoint\" v-model=\"endpoint\">\n        <Buttons :language=\"language\" \n                 @buttonClicked=\"buttonClicked\" />\n\n        <select v-model=\"resultTypes.selectedOption\">\n            <option v-for=\"type in resultTypes.options\" \n                    :value=\"type\" \n                    :key=\"type\"> {{ type }} </option>\n        </select>\n        <Output ref=\"output\" />\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue'\nimport Output from './Output.vue'\nimport {makeQuery, sendQuery} from '@/query.js'\nimport {deconstructJSON, getVariables} from '@/result.js'\n\nexport default {\n    name: 'SPARQLEditor',\n    components: {\n        CodeEditor,\n        Buttons,\n        Output\n    },\n    data () {\n        return {\n            language: 'sparql',\n            code: '',\n            endpoint: 'http://dbpedia.org/sparql',\n            resultTypes: { options: ['JSON'],\n                           selectedOption: 'JSON'} ,\n            jsonResponse: []\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) {\n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor();\n                    break;\n                case \"Perform Query\":\n                    // Get code from code mirror \n                    this.$refs.codeEditor.sendContent(); \n                    // Send SPARQL query to SPARQL endpoint with the user decided output format\n                    var queryURL = makeQuery(this.code, this.endpoint, this.resultTypes.selectedOption)\n                    this.jsonResponse = JSON.parse(sendQuery(queryURL))\n                    this.$refs.output.makeTable(deconstructJSON(this.jsonResponse), getVariables(this.jsonResponse))\n            }\n        }, \n    }\n}\n</script>\n<style>\ndiv {\n    line-height: 2; \n}\n</style>"],"sourceRoot":"src/components"}]}