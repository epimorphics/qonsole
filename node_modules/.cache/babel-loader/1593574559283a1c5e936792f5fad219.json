{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/indexedDBService.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/indexedDBService.js","mtime":1594038306488},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvYW5oZWxrYS9Eb2N1bWVudHMvZXBpbW9ycGhpY3MvcW9uc29sZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vIGlmIGluc3RhbGxlZCBmcm9tIG5wbSB1c2UgJ29wZW5EQicKaW1wb3J0IHsgb3BlbkRCIH0gZnJvbSAnaWRiJzsKCnZhciBkYlByb21pc2UgPSBmdW5jdGlvbiBkYlByb21pc2UoXykgewogIGlmICghKCdpbmRleGVkREInIGluIHdpbmRvdykpIHsKICAgIHRocm93IG5ldyBFcnJvcignQnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IEluZGV4ZWREQicpOwogIH0gLy8gaWYgaW5zdGFsbGVkIGZyb20gbnBtIHVzZSAnb3BlbkRCJwoKCiAgcmV0dXJuIG9wZW5EQignUkRGREInLCAxLCBmdW5jdGlvbiAodXBncmFkZURiKSB7CiAgICBpZiAoIXVwZ3JhZGVEYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKCdyZGZzdG9yZScpKSB7CiAgICAgIHVwZ3JhZGVEYi5jcmVhdGVPYmplY3RTdG9yZSgncmRmc3RvcmUnKTsKICAgIH0KCiAgICBpZiAoIXVwZ3JhZGVEYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKCdxdWVyaWVzJykpIHsKICAgICAgdXBncmFkZURiLmNyZWF0ZU9iamVjdFN0b3JlKCdxdWVyaWVzJyk7CiAgICB9CiAgfSk7Cn07Cgp2YXIgc2F2ZVRvU3RvcmFnZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoc3RvcmVOYW1lLCB0YXNrcykgewogICAgdmFyIGRiLCB0eCwgc3RvcmU7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGRiUHJvbWlzZSgpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgZGIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICB0eCA9IGRiLnRyYW5zYWN0aW9uKHN0b3JlTmFtZSwgJ3JlYWR3cml0ZScpOwogICAgICAgICAgICBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKHN0b3JlTmFtZSk7CiAgICAgICAgICAgIHN0b3JlLnB1dCh0YXNrcywgc3RvcmVOYW1lKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgdHguY29tcGxldGUpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQudDApOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxMF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzYXZlVG9TdG9yYWdlKF94LCBfeDIpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgewogIHNhdmVUb1N0b3JhZ2U6IHNhdmVUb1N0b3JhZ2UKfTs="},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/indexedDBService.js"],"names":["openDB","dbPromise","_","window","Error","upgradeDb","objectStoreNames","contains","createObjectStore","saveToStorage","storeName","tasks","db","tx","transaction","store","objectStore","put","complete"],"mappings":";;AAAA;AACA,SAASA,MAAT,QAAuB,KAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,CAAC,EAAI;AACrB,MAAI,EAAE,eAAeC,MAAjB,CAAJ,EAA8B;AAC5B,UAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD,GAHoB,CAIrB;;;AACA,SAAOJ,MAAM,CAAC,OAAD,EAAU,CAAV,EAAa,UAAAK,SAAS,EAAI;AACrC,QAAI,CAACA,SAAS,CAACC,gBAAV,CAA2BC,QAA3B,CAAoC,UAApC,CAAL,EAAsD;AACpDF,MAAAA,SAAS,CAACG,iBAAV,CAA4B,UAA5B;AACD;;AACD,QAAI,CAACH,SAAS,CAACC,gBAAV,CAA2BC,QAA3B,CAAoC,SAApC,CAAL,EAAqD;AACnDF,MAAAA,SAAS,CAACG,iBAAV,CAA4B,SAA5B;AACD;AACF,GAPY,CAAb;AAQD,CAbD;;AAeA,IAAMC,aAAa;AAAA,qEAAG,iBAAOC,SAAP,EAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECV,SAAS,EAFV;;AAAA;AAEVW,YAAAA,EAFU;AAGVC,YAAAA,EAHU,GAGLD,EAAE,CAACE,WAAH,CAAeJ,SAAf,EAA0B,WAA1B,CAHK;AAIVK,YAAAA,KAJU,GAIFF,EAAE,CAACG,WAAH,CAAeN,SAAf,CAJE;AAKhBK,YAAAA,KAAK,CAACE,GAAN,CAAUN,KAAV,EAAiBD,SAAjB;AALgB,6CAMTG,EAAE,CAACK,QANM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbT,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAYA,eAAe;AACXA,EAAAA,aAAa,EAAbA;AADW,CAAf","sourcesContent":["// if installed from npm use 'openDB'\nimport { openDB } from 'idb'\n\nconst dbPromise = _ => {\n  if (!('indexedDB' in window)) {\n    throw new Error('Browser does not support IndexedDB')\n  }\n  // if installed from npm use 'openDB'\n  return openDB('RDFDB', 1, upgradeDb => {\n    if (!upgradeDb.objectStoreNames.contains('rdfstore')) {\n      upgradeDb.createObjectStore('rdfstore')\n    }\n    if (!upgradeDb.objectStoreNames.contains('queries')) {\n      upgradeDb.createObjectStore('queries')\n    }\n  })\n}\n\nconst saveToStorage = async (storeName, tasks) => {\n    try {\n      const db = await dbPromise()\n      const tx = db.transaction(storeName, 'readwrite')\n      const store = tx.objectStore(storeName)\n      store.put(tasks, storeName)\n      return tx.complete\n    } catch (error) {\n      return error\n    }\n  }\n\nexport default {\n    saveToStorage\n}"]}]}