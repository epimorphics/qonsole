{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole2.0/src/components/SPARQL-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/src/components/SPARQL-Editor.vue","mtime":1592927544804},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvZGVFZGl0b3IgZnJvbSAnLi9Db2RlLUVkaXRvci52dWUnOwppbXBvcnQgQnV0dG9ucyBmcm9tICcuL0J1dHRvbnMudnVlJzsKaW1wb3J0ICdzcGFycWxqcyc7Cgp2YXIgU3BhcnFsUGFyc2VyID0gcmVxdWlyZSgnc3BhcnFsanMnKS5QYXJzZXI7Cgp2YXIgcGFyc2VyID0gbmV3IFNwYXJxbFBhcnNlcigpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NQQVJRTEVkaXRvcicsCiAgY29tcG9uZW50czogewogICAgQ29kZUVkaXRvcjogQ29kZUVkaXRvciwKICAgIEJ1dHRvbnM6IEJ1dHRvbnMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYW5ndWFnZTogJ3NwYXJxbCcsCiAgICAgIGNvZGU6ICcnLAogICAgICBwYXJzZWRRdWVyeTogJycsCiAgICAgIGVuZHBvaW50OiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uIGJ1dHRvbkNsaWNrZWQoYnV0dG9uKSB7CiAgICAgIHN3aXRjaCAoYnV0dG9uKSB7CiAgICAgICAgY2FzZSAiQ2xlYXIiOgogICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLmNsZWFyRWRpdG9yKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiUGVyZm9ybSBRdWVyeSI6CiAgICAgICAgICB0aGlzLiRyZWZzLmNvZGVFZGl0b3Iuc2VuZENvbnRlbnQoKTsKICAgICAgICAgIHRoaXMucGFyc2VkUXVlcnkgPSBwYXJzZXIucGFyc2UodGhpcy5jb2RlKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["SPARQL-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,UAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,UAAA,CAAA,CAAA,MAAA;;AACA,IAAA,MAAA,GAAA,IAAA,YAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,cAAA,MAAA;AACA,aAAA,OAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA;;AACA,aAAA,eAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA,eAAA,WAAA,GAAA,MAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AANA;AAQA;AAVA;AAdA,CAAA","sourcesContent":["<template>\n    <div>\n        Example datasheets: \n        <CodeEditor :language=\"language\" \n            ref=\"codeEditor\" \n            @sendCode=\"code = $event\"/>\n        <label for=\"endpoint\">SPARQL Endpoint: </label>\n        <input type=\"text\" id=\"endpoint\" name=\"endpoint\" v-model=\"endpoint\">\n        <Buttons :language=\"language\" \n            @buttonClicked=\"buttonClicked\" />\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue'\nimport 'sparqljs'\n\nvar SparqlParser = require('sparqljs').Parser;\nvar parser = new SparqlParser();\n\nexport default {\n    name: 'SPARQLEditor',\n    components: {\n        CodeEditor,\n        Buttons\n    },\n    data () {\n        return {\n            language: 'sparql',\n            code: '',\n            parsedQuery: '',\n            endpoint: ''\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) {\n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor();\n                    break;\n                case \"Perform Query\":\n                    this.$refs.codeEditor.sendContent(); \n                    this.parsedQuery = parser.parse(this.code)\n            }\n        }, \n    }\n}\n</script>\n<style>\ndiv {\n    line-height: 2.5; \n}\n</style>"],"sourceRoot":"src/components"}]}