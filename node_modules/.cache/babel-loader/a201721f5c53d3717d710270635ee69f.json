{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/SPARQL-Editor.vue","mtime":1593440386999},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvZGVFZGl0b3IgZnJvbSAnLi9Db2RlLUVkaXRvci52dWUnOwppbXBvcnQgQnV0dG9ucyBmcm9tICcuL0J1dHRvbnMudnVlJzsKaW1wb3J0IE91dHB1dCBmcm9tICcuL091dHB1dC52dWUnOwppbXBvcnQgeyBtYWtlUXVlcnksIHNlbmRRdWVyeSB9IGZyb20gJ0AvcXVlcnkuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NQQVJRTEVkaXRvcicsCiAgY29tcG9uZW50czogewogICAgQ29kZUVkaXRvcjogQ29kZUVkaXRvciwKICAgIEJ1dHRvbnM6IEJ1dHRvbnMsCiAgICBPdXRwdXQ6IE91dHB1dAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxhbmd1YWdlOiAnc3BhcnFsJywKICAgICAgY29kZTogJycsCiAgICAgIGVuZHBvaW50OiAnaHR0cDovL2RicGVkaWEub3JnL3NwYXJxbCcsCiAgICAgIHJlc3VsdFR5cGVzOiB7CiAgICAgICAgb3B0aW9uczogWydKU09OJ10sCiAgICAgICAgc2VsZWN0ZWRPcHRpb246ICdKU09OJwogICAgICB9LAogICAgICBqc29uUmVzcG9uc2U6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYnV0dG9uQ2xpY2tlZDogZnVuY3Rpb24gYnV0dG9uQ2xpY2tlZChidXR0b24pIHsKICAgICAgc3dpdGNoIChidXR0b24pIHsKICAgICAgICBjYXNlICJDbGVhciI6CiAgICAgICAgICB0aGlzLiRyZWZzLmNvZGVFZGl0b3IuY2xlYXJFZGl0b3IoKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJQZXJmb3JtIFF1ZXJ5IjoKICAgICAgICAgIC8vIEdldCBjb2RlIGZyb20gY29kZSBtaXJyb3IgCiAgICAgICAgICB0aGlzLiRyZWZzLmNvZGVFZGl0b3Iuc2VuZENvbnRlbnQoKTsgLy8gU2VuZCBTUEFSUUwgcXVlcnkgdG8gU1BBUlFMIGVuZHBvaW50IHdpdGggdGhlIHVzZXIgZGVjaWRlZCBvdXRwdXQgZm9ybWF0CgogICAgICAgICAgdmFyIHF1ZXJ5VVJMID0gbWFrZVF1ZXJ5KHRoaXMuY29kZSwgdGhpcy5lbmRwb2ludCwgdGhpcy5yZXN1bHRUeXBlcy5zZWxlY3RlZE9wdGlvbik7CiAgICAgICAgICB0aGlzLmpzb25SZXNwb25zZSA9IEpTT04ucGFyc2Uoc2VuZFF1ZXJ5KHF1ZXJ5VVJMKSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["SPARQL-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,MAAA,MAAA,cAAA;AACA,SAAA,SAAA,EAAA,SAAA,QAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,MAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,2BAHA;AAIA,MAAA,WAAA,EAAA;AAAA,QAAA,OAAA,EAAA,CAAA,MAAA,CAAA;AACA,QAAA,cAAA,EAAA;AADA,OAJA;AAMA,MAAA,YAAA,EAAA;AANA,KAAA;AAQA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,cAAA,MAAA;AACA,aAAA,OAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA;;AACA,aAAA,eAAA;AACA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,WAAA,GAFA,CAGA;;AACA,cAAA,QAAA,GAAA,SAAA,CAAA,KAAA,IAAA,EAAA,KAAA,QAAA,EAAA,KAAA,WAAA,CAAA,cAAA,CAAA;AACA,eAAA,YAAA,GAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;AATA;AAWA;AAbA;AAjBA,CAAA","sourcesContent":["<template>\n    <div>\n        Example datasheets: \n        <CodeEditor :language=\"language\" \n                    ref=\"codeEditor\" \n                    @sendCode=\"code = $event\"/>\n        <label for=\"endpoint\">SPARQL Endpoint: </label>\n        <input type=\"text\" id=\"endpoint\" name=\"endpoint\" v-model=\"endpoint\">\n        <Buttons :language=\"language\" \n                 @buttonClicked=\"buttonClicked\" />\n\n        <select v-model=\"resultTypes.selectedOption\">\n            <option v-for=\"type in resultTypes.options\" \n                    :value=\"type\" \n                    :key=\"type\"> {{ type }} </option>\n        </select>\n        <Output ref=\"output\" :jsonResponse=\"jsonResponse\"/>\n    </div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue'\nimport Output from './Output.vue'\nimport {makeQuery, sendQuery} from '@/query.js'\n\nexport default {\n    name: 'SPARQLEditor',\n    components: {\n        CodeEditor,\n        Buttons,\n        Output\n    },\n    data () {\n        return {\n            language: 'sparql',\n            code: '',\n            endpoint: 'http://dbpedia.org/sparql',\n            resultTypes: { options: ['JSON'],\n                           selectedOption: 'JSON'} ,\n            jsonResponse: [],\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) {\n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor();\n                    break;\n                case \"Perform Query\":\n                    // Get code from code mirror \n                    this.$refs.codeEditor.sendContent(); \n                    // Send SPARQL query to SPARQL endpoint with the user decided output format\n                    var queryURL = makeQuery(this.code, this.endpoint, this.resultTypes.selectedOption)\n                    this.jsonResponse = JSON.parse(sendQuery(queryURL))\n            }\n        }, \n    }\n}\n</script>\n<style>\ndiv {\n    line-height: 2; \n}\n</style>"],"sourceRoot":"src/components"}]}