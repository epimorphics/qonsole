{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue","mtime":1593620091486},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgY29kZW1pcnJvciB9IGZyb20gJ3Z1ZS1jb2RlbWlycm9yJzsKaW1wb3J0ICdjb2RlbWlycm9yL2xpYi9jb2RlbWlycm9yLmNzcyc7CmltcG9ydCAnY29kZW1pcnJvci9tb2RlL3NwYXJxbC9zcGFycWwuanMnOwppbXBvcnQgJ2NvZGVtaXJyb3IvbW9kZS90dXJ0bGUvdHVydGxlLmpzJzsKaW1wb3J0ICdjb2RlbWlycm9yL3RoZW1lL2Jhc2UxNi1saWdodC5jc3MnOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29kZUVkaXRvcicsCiAgY29tcG9uZW50czogewogICAgY29kZW1pcnJvcjogY29kZW1pcnJvcgogIH0sCiAgLy8gR2V0IGxhbmd1YWdlIG1vZGUgZnJvbSBwYXJlbnQgYW5kIGNoYW5nZSB0aGUgbW9kZSBvZiBDb2RlIE1pcnJvciBhY2NvcmRpbmdseSAKICBwcm9wczogWydsYW5ndWFnZSddLAogIHN0b3JlOiBzdG9yZSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY21PcHRpb25zOiB7CiAgICAgICAgLy8gQ29kZSBNaXJyb3Igb3B0aW9ucyAKICAgICAgICB0YWJTaXplOiA0LAogICAgICAgIG1vZGU6IHRoaXMubGFuZ3VhZ2UsCiAgICAgICAgdGhlbWU6ICdiYXNlMTYtbGlnaHQnLAogICAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLAogICAgICAgIGxpbmU6IHRydWUKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ21SZWFkeTogZnVuY3Rpb24gb25DbVJlYWR5KGNtKSB7CiAgICAgIGNvbnNvbGUubG9nKCd0aGUgZWRpdG9yIGlzIHJlYWRpZWQhJywgY20pOwogICAgfSwKICAgIG9uQ21Gb2N1czogZnVuY3Rpb24gb25DbUZvY3VzKGNtKSB7CiAgICAgIGNvbnNvbGUubG9nKCd0aGUgZWRpdG9yIGlzIGZvY3VzZWQhJywgY20pOwogICAgfSwKICAgIG9uQ21Db2RlQ2hhbmdlOiBmdW5jdGlvbiBvbkNtQ29kZUNoYW5nZShuZXdDb2RlKSB7CiAgICAgIC8vIFdyaXRlIGluIGNvbnNvbGUgZm9yIGRlYnVnZ2luZyBwdXJwb3NlcyAKICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMgaXMgbmV3IGNvZGUnLCBuZXdDb2RlKQogICAgICBzd2l0Y2ggKHRoaXMubGFuZ3VhZ2UpIHsKICAgICAgICBjYXNlICJ0dXJ0bGUiOgogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCd1cGRhdGVUdXJ0bGVDb2RlJywgbmV3Q29kZSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAic3BhcnFsIjoKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlU1BBUlFMQ29kZScsIG5ld0NvZGUpOwogICAgICB9IC8vIHRoaXMuY29kZSA9IG5ld0NvZGUKCiAgICB9LAogICAgY2xlYXJFZGl0b3I6IGZ1bmN0aW9uIGNsZWFyRWRpdG9yKCkgewogICAgICB0aGlzLmNvZGUgPSAnJzsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb2RlbWlycm9yOiBmdW5jdGlvbiBjb2RlbWlycm9yKCkgewogICAgICByZXR1cm4gdGhpcy4kcmVmcy5jbUVkaXRvci5jb2RlbWlycm9yOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCd0aGUgY3VycmVudCBDb2RlTWlycm9yIGluc3RhbmNlIG9iamVjdDonLCB0aGlzLmNvZGVtaXJyb3IpOyAvLyB5b3UgY2FuIHVzZSB0aGlzLmNvZGVtaXJyb3IgdG8gZG8gc29tZXRoaW5nLi4uCgogICAgc3dpdGNoICh0aGlzLmxhbmd1YWdlKSB7CiAgICAgIGNhc2UgInNwYXJxbCI6CiAgICAgICAgdGhpcy5jb2RlID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5TUEFSUUxDb2RlOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAidHVydGxlIjoKICAgICAgICB0aGlzLmNvZGUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLnR1cnRsZUNvZGU7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Code-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,UAAA,QAAA,gBAAA;AACA,OAAA,+BAAA;AACA,OAAA,kCAAA;AACA,OAAA,kCAAA;AACA,OAAA,mCAAA;AACA,OAAA,KAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA;AACA,EAAA,KAAA,EAAA,CAAA,UAAA,CANA;AAOA,EAAA,KAAA,EAAA,KAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA;AACA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,IAAA,EAAA,KAAA,QAHA;AAIA,QAAA,KAAA,EAAA,cAJA;AAKA,QAAA,WAAA,EAAA,IALA;AAMA,QAAA,IAAA,EAAA;AANA;AADA,KAAA;AAUA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,EADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wBAAA,EAAA,EAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,EAJA,EAIA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wBAAA,EAAA,EAAA;AACA,KANA;AAOA,IAAA,cAPA,0BAOA,OAPA,EAOA;AACA;AACA;AACA,cAAA,KAAA,QAAA;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,OAAA;AACA;;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,OAAA;AALA,OAHA,CAUA;;AACA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,WAAA,IAAA,GAAA,EAAA;AACA;AArBA,GApBA;AA2CA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,KAAA,CAAA,QAAA,CAAA,UAAA;AACA;AAHA,GA3CA;AAgDA,EAAA,OAhDA,qBAgDA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,yCAAA,EAAA,KAAA,UAAA,EADA,CAEA;;AACA,YAAA,KAAA,QAAA;AACA,WAAA,QAAA;AACA,aAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA;AACA;;AACA,WAAA,QAAA;AACA,aAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA;AALA;AAOA;AA1DA,CAAA","sourcesContent":["<template>\n    <div>\n        <codemirror\n            ref=\"cmEditor\"\n            v-if=\"language=='sparql'\"\n            :value=\"this.$store.getters.SPARQLCode\"\n            :options=\"cmOptions\"\n            @ready=\"onCmReady\"\n            @focus=\"onCmFocus\"\n            @input=\"onCmCodeChange\"\n        />\n        <codemirror\n            ref=\"cmEditor\"\n            v-if=\"language=='turtle'\"\n            :value=\"this.$store.getters.turtleCode\"\n            :options=\"cmOptions\"\n            @ready=\"onCmReady\"\n            @focus=\"onCmFocus\"\n            @input=\"onCmCodeChange\"\n        />\n    </div>\n</template>\n<script>\nimport { codemirror } from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/sparql/sparql.js'\nimport 'codemirror/mode/turtle/turtle.js'\nimport 'codemirror/theme/base16-light.css'\nimport store from '@/store.js'\n\nexport default {\n    name: 'CodeEditor',\n    components: {\n        codemirror\n    },\n    // Get language mode from parent and change the mode of Code Mirror accordingly \n    props: ['language'], \n    store: store, \n    data() {\n        return {\n            cmOptions: {\n                // Code Mirror options \n                tabSize: 4,\n                mode: this.language,\n                theme: 'base16-light',\n                lineNumbers: true,\n                line: true\n            }, \n        }\n    },\n    methods: {\n        onCmReady(cm) {\n            console.log('the editor is readied!', cm)\n        },\n        onCmFocus(cm) {\n            console.log('the editor is focused!', cm)\n        },\n        onCmCodeChange(newCode) {\n            // Write in console for debugging purposes \n            // console.log('this is new code', newCode)\n            switch (this.language){\n                case \"turtle\":\n                    this.$store.commit('updateTurtleCode', newCode)\n                    break; \n                case \"sparql\":\n                    this.$store.commit('updateSPARQLCode', newCode)\n            }\n            // this.code = newCode\n        },\n        clearEditor() {\n            this.code = '' \n        },\n    },\n    computed: {\n        codemirror() {\n            return this.$refs.cmEditor.codemirror\n        }\n    },\n    mounted() {\n        console.log('the current CodeMirror instance object:', this.codemirror)\n        // you can use this.codemirror to do something...\n        switch (this.language) {\n            case \"sparql\":\n                this.code = this.$store.getters.SPARQLCode\n                break; \n            case \"turtle\":\n                this.code = this.$store.getters.turtleCode \n        }\n    }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}