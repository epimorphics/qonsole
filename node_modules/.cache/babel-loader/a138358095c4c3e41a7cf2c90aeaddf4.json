{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/store.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/store.js","mtime":1593698769333},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsgLy8gY29uc3QgTjMgPSByZXF1aXJlKCduMycpOwovLyBjb25zdCByZGZzdG9yZSA9IG5ldyBOMy5TdG9yZSgpCgp2YXIgcmRmU3RvcmUgPSByZXF1aXJlKCdyZGZzdG9yZScpOwoKdmFyIHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICAvLyBPdmVyYWxsIAogICAgY3VycmVudExhbmd1YWdlOiAnJywKICAgIC8vIEVycm9yIGhhbmRsaW5nICAKICAgIGVycm9yOiBmYWxzZSwKICAgIGVycm9yTWVzc2FnZTogJycsCiAgICAvLyBSREYgCiAgICB0dXJ0bGVDb2RlOiAnJywKICAgIHByZWZpeGVzOiBbXSwKICAgIHJkZnN0b3JlOiBuZXcgcmRmU3RvcmUuU3RvcmUoZnVuY3Rpb24gKGVyciwgc3RvcmUpIHsKICAgICAgLy8gdGhlIG5ldyBzdG9yZSBpcyByZWFkeQogICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICByZXR1cm4gc3RvcmU7CiAgICB9KSwKICAgIHN0b3JlUXVlcnlSZXN1bHQ6IFtdLAogICAgLy8gU1BBUlFMCiAgICBTUEFSUUxDb2RlOiAnJywKICAgIGpzb25SZXNwb25zZTogJycsCiAgICAvLyBQcmVmaXhlcyAKICAgIHNlbGVjdGVkUHJlZml4ZXM6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHVwZGF0ZVNQQVJRTENvZGU6IGZ1bmN0aW9uIHVwZGF0ZVNQQVJRTENvZGUoc3RhdGUsIG5ld0NvZGUpIHsKICAgICAgc3RhdGUuU1BBUlFMQ29kZSA9IG5ld0NvZGU7CiAgICB9LAogICAgdXBkYXRlVHVydGxlQ29kZTogZnVuY3Rpb24gdXBkYXRlVHVydGxlQ29kZShzdGF0ZSwgbmV3Q29kZSkgewogICAgICBzdGF0ZS50dXJ0bGVDb2RlID0gbmV3Q29kZTsKICAgIH0sCiAgICB1cGRhdGVKU09OUmVzcG9uc2U6IGZ1bmN0aW9uIHVwZGF0ZUpTT05SZXNwb25zZShzdGF0ZSwgbmV3UmVzcG9uc2UpIHsKICAgICAgc3RhdGUuanNvblJlc3BvbnNlID0gbmV3UmVzcG9uc2U7CiAgICB9LAogICAgY2hhbmdlRXJyb3I6IGZ1bmN0aW9uIGNoYW5nZUVycm9yKHN0YXRlLCBib29sZWFuKSB7CiAgICAgIHN0YXRlLmVycm9yID0gYm9vbGVhbjsKICAgIH0sCiAgICB1cGRhdGVFcnJvck1lc3NhZ2U6IGZ1bmN0aW9uIHVwZGF0ZUVycm9yTWVzc2FnZShzdGF0ZSwgZXJyb3JNZXNzYWdlKSB7CiAgICAgIHN0YXRlLmVycm9yTWVzc2FnZSA9IGVycm9yTWVzc2FnZTsKICAgIH0sCiAgICB1cGRhdGVDdXJyZW50TGFuZ3VhZ2U6IGZ1bmN0aW9uIHVwZGF0ZUN1cnJlbnRMYW5ndWFnZShzdGF0ZSwgbmV3TGFuZ3VhZ2UpIHsKICAgICAgc3RhdGUuY3VycmVudExhbmd1YWdlID0gbmV3TGFuZ3VhZ2U7CiAgICB9LAogICAgYWRkUHJlZml4OiBmdW5jdGlvbiBhZGRQcmVmaXgoc3RhdGUsIG5ld1ByZWZpeCkgewogICAgICBzdGF0ZS5wcmVmaXhlcy5wdXNoKG5ld1ByZWZpeCk7CiAgICB9LAogICAgY2xlYXJUdXJ0bGVTdG9yZTogZnVuY3Rpb24gY2xlYXJUdXJ0bGVTdG9yZShzdGF0ZSkgewogICAgICBzdGF0ZS5wcmVmaXhlcyA9IFtdOwogICAgICBzdGF0ZS5yZGZzdG9yZSA9IG5ldyByZGZTdG9yZS5TdG9yZShmdW5jdGlvbiAoZXJyLCBzdG9yZSkgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgcmV0dXJuIHN0b3JlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyBwb3B1bGF0ZVJERlN0b3JlIChzdGF0ZSwgcXVhZCl7CiAgICAvLyAgIHN0YXRlLnJkZnN0b3JlLmFkZFF1YWQocXVhZCkKICAgIC8vIH0sCiAgICBsb2FkUkRGOiBmdW5jdGlvbiBsb2FkUkRGKHN0YXRlKSB7CiAgICAgIHN0YXRlLnJkZnN0b3JlLmxvYWQoInRleHQvdHVydGxlIiwgc3RhdGUudHVydGxlQ29kZSwgZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZVNlbGVjdGVkUHJlZml4ZXM6IGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGVkUHJlZml4ZXMoc3RhdGUsIHByZWZpeGVzKSB7CiAgICAgIHN0YXRlLnNlbGVjdGVkUHJlZml4ZXMgPSBwcmVmaXhlczsKICAgIH0sCiAgICBxdWVyeVN0b3JlOiBmdW5jdGlvbiBxdWVyeVN0b3JlKHN0YXRlKSB7CiAgICAgIHN0YXRlLnJkZnN0b3JlLmV4ZWN1dGUoc3RhdGUuU1BBUlFMQ29kZSwgZnVuY3Rpb24gKGVyciwgcmVzdWx0cykgewogICAgICAgIGlmIChlcnIpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHN0YXRlLnN0b3JlUXVlcnlSZXN1bHQgPSByZXN1bHRzOwogICAgICAgICAgY29uc29sZS5sb2coc3RhdGUuc3RvcmVRdWVyeVJlc3VsdCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIFNQQVJRTENvZGU6IGZ1bmN0aW9uIFNQQVJRTENvZGUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLlNQQVJRTENvZGU7CiAgICB9LAogICAganNvblJlc3BvbnNlOiBmdW5jdGlvbiBqc29uUmVzcG9uc2Uoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmpzb25SZXNwb25zZTsKICAgIH0sCiAgICBlcnJvck1lc3NhZ2U6IGZ1bmN0aW9uIGVycm9yTWVzc2FnZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZXJyb3JNZXNzYWdlOwogICAgfSwKICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZXJyb3I7CiAgICB9LAogICAgdHVydGxlQ29kZTogZnVuY3Rpb24gdHVydGxlQ29kZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudHVydGxlQ29kZTsKICAgIH0sCiAgICBjdXJyZW50TGFuZ3VhZ2U6IGZ1bmN0aW9uIGN1cnJlbnRMYW5ndWFnZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY3VycmVudExhbmd1YWdlOwogICAgfSwKICAgIHByZWZpeGVzOiBmdW5jdGlvbiBwcmVmaXhlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucHJlZml4ZXM7CiAgICB9LAogICAgcmRmc3RvcmU6IGZ1bmN0aW9uIHJkZnN0b3JlKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5yZGZzdG9yZTsKICAgIH0sCiAgICBzZWxlY3RlZFByZWZpeGVzOiBmdW5jdGlvbiBzZWxlY3RlZFByZWZpeGVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zZWxlY3RlZFByZWZpeGVzOwogICAgfSwKICAgIGZpbGVUZXh0OiBmdW5jdGlvbiBmaWxlVGV4dChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZmlsZVRleHQ7CiAgICB9LAogICAgc3RvcmVRdWVyeVJlc3VsdDogZnVuY3Rpb24gc3RvcmVRdWVyeVJlc3VsdChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc3RvcmVRdWVyeVJlc3VsdDsKICAgIH0KICB9Cn0pOwpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/store.js"],"names":["Vue","Vuex","use","rdfStore","require","store","Store","state","currentLanguage","error","errorMessage","turtleCode","prefixes","rdfstore","err","console","log","storeQueryResult","SPARQLCode","jsonResponse","selectedPrefixes","mutations","updateSPARQLCode","newCode","updateTurtleCode","updateJSONResponse","newResponse","changeError","boolean","updateErrorMessage","updateCurrentLanguage","newLanguage","addPrefix","newPrefix","push","clearTurtleStore","loadRDF","load","updateSelectedPrefixes","queryStore","execute","results","getters","fileText"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// const N3 = require('n3');\n// const rdfstore = new N3.Store()\nvar rdfStore = require('rdfstore');\n\nconst store = new Vuex.Store({\n  state: {\n    // Overall \n    currentLanguage: '', \n\n    // Error handling  \n    error: false,\n    errorMessage: '',\n\n    // RDF \n    turtleCode: '',\n    prefixes: [], \n    rdfstore: new rdfStore.Store(function(err, store) {\n      // the new store is ready\n      console.log(err)\n      return store \n    }),\n    storeQueryResult: [], \n\n    // SPARQL\n    SPARQLCode: '',\n    jsonResponse: '',\n\n    // Prefixes \n    selectedPrefixes: []\n  },\n  mutations: {\n    updateSPARQLCode (state, newCode) {\n      state.SPARQLCode = newCode \n    },\n    updateTurtleCode (state, newCode) {\n      state.turtleCode = newCode\n    }, \n    updateJSONResponse (state, newResponse) {\n      state.jsonResponse = newResponse\n    },\n    changeError (state, boolean) {\n      state.error = boolean \n    },\n    updateErrorMessage (state, errorMessage) {\n      state.errorMessage = errorMessage\n    },\n    updateCurrentLanguage (state, newLanguage) {\n      state.currentLanguage = newLanguage\n    },\n    addPrefix (state, newPrefix) {\n      state.prefixes.push(newPrefix)\n    },\n    clearTurtleStore (state) {\n      state.prefixes = []\n      state.rdfstore = new rdfStore.Store(function(err, store) {\n        console.log(err)\n        return store\n      });\n    },\n    // populateRDFStore (state, quad){\n    //   state.rdfstore.addQuad(quad)\n    // },\n    loadRDF (state) {\n      state.rdfstore.load(\"text/turtle\", state.turtleCode, function(err){ console.log(err) })\n    }, \n    updateSelectedPrefixes (state, prefixes) {\n      state.selectedPrefixes = prefixes\n    },\n    queryStore (state) {\n      state.rdfstore.execute(state.SPARQLCode, function(err,results) {\n        if (err) {\n          console.log(err)\n        } else {\n          state.storeQueryResult = results \n          console.log(state.storeQueryResult)\n        }\n      })\n    }\n  },\n  getters: {\n      SPARQLCode: state => state.SPARQLCode,\n      jsonResponse: state => state.jsonResponse, \n      errorMessage: state => state.errorMessage,\n      error: state => state.error,\n      turtleCode: state => state.turtleCode, \n      currentLanguage: state => state.currentLanguage,\n      prefixes: state => state.prefixes,\n      rdfstore: state => state.rdfstore,\n      selectedPrefixes: state => state.selectedPrefixes,\n      fileText: state => state.fileText,\n      storeQueryResult: state  => state.storeQueryResult\n  }\n})\n\nexport default store "]}]}