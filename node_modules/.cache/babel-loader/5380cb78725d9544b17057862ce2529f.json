{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/rdfstore.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/rdfstore.js","mtime":1593533261476},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIE4zID0gcmVxdWlyZSgnbjMnKTsKCmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlLmpzJzsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VUdXJ0bGUoY29kZSkgewogIHZhciBfdGhpcyA9IHRoaXM7CgogIHZhciBwYXJzZXIgPSBuZXcgTjMuUGFyc2VyKCk7CiAgcGFyc2VyLnBhcnNlKGNvZGUsIGZ1bmN0aW9uIChlcnJvciwgcXVhZCwgcHJlZml4ZXMpIHsKICAgIGlmIChlcnJvcikgewogICAgICBfdGhpcy4kc3RvcmUuY29tbWl0KCdjaGFuZ2VFcnJvcicsIHRydWUpOwoKICAgICAgX3RoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlRXJyb3JNZXNzYWdlJywgZXJyb3IpOwoKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICByZXR1cm4gZXJyb3I7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlLmxvZyhxdWFkKTsKICAgICAgY29uc29sZS5sb2cocHJlZml4ZXMpOwogICAgICByZXR1cm4gX3RoaXM7CiAgICB9CiAgfSk7Cn0="},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/rdfstore.js"],"names":["N3","require","store","parseTurtle","code","parser","Parser","parse","error","quad","prefixes","$store","commit","console","log"],"mappings":"AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAAA;;AACtC,MAAMC,MAAM,GAAG,IAAIL,EAAE,CAACM,MAAP,EAAf;AACAD,EAAAA,MAAM,CAACE,KAAP,CAAaH,IAAb,EACI,UAACI,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAA2B;AACvB,QAAIF,KAAJ,EAAW;AACP,MAAA,KAAI,CAACG,MAAL,CAAYC,MAAZ,CAAmB,aAAnB,EAAkC,IAAlC;;AACA,MAAA,KAAI,CAACD,MAAL,CAAYC,MAAZ,CAAmB,oBAAnB,EAAyCJ,KAAzC;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,aAAOA,KAAP;AACH,KALD,MAKO;AACHK,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,aAAO,KAAP;AACH;AACJ,GAZL;AAaH","sourcesContent":["const N3 = require('n3');\nimport store from '@/store.js'\n\nexport default function parseTurtle(code) {\n    const parser = new N3.Parser();\n    parser.parse(code, \n        (error, quad, prefixes) => {\n            if (error) {\n                this.$store.commit('changeError', true)\n                this.$store.commit('updateErrorMessage', error)\n                console.log(error)\n                return error \n            } else {\n                console.log(quad)\n                console.log(prefixes)\n                return this\n            }\n        })\n}\n"]}]}