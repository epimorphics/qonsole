{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/Code-Editor.vue","mtime":1593532643786},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgY29kZW1pcnJvciB9IGZyb20gJ3Z1ZS1jb2RlbWlycm9yJzsKaW1wb3J0ICdjb2RlbWlycm9yL2xpYi9jb2RlbWlycm9yLmNzcyc7CmltcG9ydCAnY29kZW1pcnJvci9tb2RlL3NwYXJxbC9zcGFycWwuanMnOwppbXBvcnQgJ2NvZGVtaXJyb3IvbW9kZS90dXJ0bGUvdHVydGxlLmpzJzsKaW1wb3J0ICdjb2RlbWlycm9yL3RoZW1lL2Jhc2UxNi1saWdodC5jc3MnOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29kZUVkaXRvcicsCiAgY29tcG9uZW50czogewogICAgY29kZW1pcnJvcjogY29kZW1pcnJvcgogIH0sCiAgLy8gR2V0IGxhbmd1YWdlIG1vZGUgZnJvbSBwYXJlbnQgYW5kIGNoYW5nZSB0aGUgbW9kZSBvZiBDb2RlIE1pcnJvciBhY2NvcmRpbmdseSAKICBwcm9wczogWydsYW5ndWFnZSddLAogIHN0b3JlOiBzdG9yZSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29kZTogJycsCiAgICAgIGNtT3B0aW9uczogewogICAgICAgIC8vIENvZGUgTWlycm9yIG9wdGlvbnMgCiAgICAgICAgdGFiU2l6ZTogNCwKICAgICAgICBtb2RlOiB0aGlzLmxhbmd1YWdlLAogICAgICAgIHRoZW1lOiAnYmFzZTE2LWxpZ2h0JywKICAgICAgICBsaW5lTnVtYmVyczogdHJ1ZSwKICAgICAgICBsaW5lOiB0cnVlCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNtUmVhZHk6IGZ1bmN0aW9uIG9uQ21SZWFkeShjbSkgewogICAgICBjb25zb2xlLmxvZygndGhlIGVkaXRvciBpcyByZWFkaWVkIScsIGNtKTsKICAgIH0sCiAgICBvbkNtRm9jdXM6IGZ1bmN0aW9uIG9uQ21Gb2N1cyhjbSkgewogICAgICBjb25zb2xlLmxvZygndGhlIGVkaXRvciBpcyBmb2N1c2VkIScsIGNtKTsKICAgIH0sCiAgICBvbkNtQ29kZUNoYW5nZTogZnVuY3Rpb24gb25DbUNvZGVDaGFuZ2UobmV3Q29kZSkgewogICAgICAvLyBXcml0ZSBpbiBjb25zb2xlIGZvciBkZWJ1Z2dpbmcgcHVycG9zZXMgCiAgICAgIC8vIGNvbnNvbGUubG9nKCd0aGlzIGlzIG5ldyBjb2RlJywgbmV3Q29kZSkKICAgICAgc3dpdGNoICh0aGlzLmxhbmd1YWdlKSB7CiAgICAgICAgY2FzZSAidHVydGxlIjoKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlVHVydGxlQ29kZScsIG5ld0NvZGUpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgInNwYXJxbCI6CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZVNQQVJRTENvZGUnLCBuZXdDb2RlKTsKICAgICAgfSAvLyB0aGlzLmNvZGUgPSBuZXdDb2RlCgogICAgfSwKICAgIGNsZWFyRWRpdG9yOiBmdW5jdGlvbiBjbGVhckVkaXRvcigpIHsKICAgICAgdGhpcy5jb2RlID0gJyc7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY29kZW1pcnJvcjogZnVuY3Rpb24gY29kZW1pcnJvcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuY21FZGl0b3IuY29kZW1pcnJvcjsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBjb25zb2xlLmxvZygndGhlIGN1cnJlbnQgQ29kZU1pcnJvciBpbnN0YW5jZSBvYmplY3Q6JywgdGhpcy5jb2RlbWlycm9yKTsgLy8geW91IGNhbiB1c2UgdGhpcy5jb2RlbWlycm9yIHRvIGRvIHNvbWV0aGluZy4uLgoKICAgIHN3aXRjaCAodGhpcy5sYW5ndWFnZSkgewogICAgICBjYXNlICJzcGFycWwiOgogICAgICAgIHRoaXMuY29kZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuU1BBUlFMQ29kZTsKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgInR1cnRsZSI6CiAgICAgICAgdGhpcy5jb2RlID0gdGhpcy4kc3RvcmUuZ2V0dGVycy50dXJ0bGVDb2RlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Code-Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,SAAA,UAAA,QAAA,gBAAA;AACA,OAAA,+BAAA;AACA,OAAA,kCAAA;AACA,OAAA,kCAAA;AACA,OAAA,mCAAA;AACA,OAAA,KAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA;AACA,EAAA,KAAA,EAAA,CAAA,UAAA,CANA;AAOA,EAAA,KAAA,EAAA,KAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AACA;AACA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,IAAA,EAAA,KAAA,QAHA;AAIA,QAAA,KAAA,EAAA,cAJA;AAKA,QAAA,WAAA,EAAA,IALA;AAMA,QAAA,IAAA,EAAA;AANA;AAFA,KAAA;AAWA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,EADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wBAAA,EAAA,EAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,EAJA,EAIA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wBAAA,EAAA,EAAA;AACA,KANA;AAOA,IAAA,cAPA,0BAOA,OAPA,EAOA;AACA;AACA;AACA,cAAA,KAAA,QAAA;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,OAAA;AACA;;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,OAAA;AALA,OAHA,CAUA;;AACA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,WAAA,IAAA,GAAA,EAAA;AACA;AArBA,GArBA;AA4CA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,KAAA,CAAA,QAAA,CAAA,UAAA;AACA;AAHA,GA5CA;AAiDA,EAAA,OAjDA,qBAiDA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,yCAAA,EAAA,KAAA,UAAA,EADA,CAEA;;AACA,YAAA,KAAA,QAAA;AACA,WAAA,QAAA;AACA,aAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA;AACA;;AACA,WAAA,QAAA;AACA,aAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA;AALA;AAOA;AA3DA,CAAA","sourcesContent":["<template>\n    <div>\n        <codemirror\n            ref=\"cmEditor\"\n            :value=\"code\"\n            :options=\"cmOptions\"\n            @ready=\"onCmReady\"\n            @focus=\"onCmFocus\"\n            @input=\"onCmCodeChange\"\n        />\n    </div>\n</template>\n<script>\nimport { codemirror } from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/sparql/sparql.js'\nimport 'codemirror/mode/turtle/turtle.js'\nimport 'codemirror/theme/base16-light.css'\nimport store from '@/store.js'\n\nexport default {\n    name: 'CodeEditor',\n    components: {\n        codemirror\n    },\n    // Get language mode from parent and change the mode of Code Mirror accordingly \n    props: ['language'], \n    store: store, \n    data() {\n        return {\n            code : '', \n            cmOptions: {\n                // Code Mirror options \n                tabSize: 4,\n                mode: this.language,\n                theme: 'base16-light',\n                lineNumbers: true,\n                line: true\n            }, \n        }\n    },\n    methods: {\n        onCmReady(cm) {\n            console.log('the editor is readied!', cm)\n        },\n        onCmFocus(cm) {\n            console.log('the editor is focused!', cm)\n        },\n        onCmCodeChange(newCode) {\n            // Write in console for debugging purposes \n            // console.log('this is new code', newCode)\n            switch (this.language){\n                case \"turtle\":\n                    this.$store.commit('updateTurtleCode', newCode)\n                    break; \n                case \"sparql\":\n                    this.$store.commit('updateSPARQLCode', newCode)\n            }\n            // this.code = newCode\n        },\n        clearEditor() {\n            this.code = '' \n        },\n    },\n    computed: {\n        codemirror() {\n            return this.$refs.cmEditor.codemirror\n        }\n    },\n    mounted() {\n        console.log('the current CodeMirror instance object:', this.codemirror)\n        // you can use this.codemirror to do something...\n        switch (this.language) {\n            case \"sparql\":\n                this.code = this.$store.getters.SPARQLCode\n                break; \n            case \"turtle\":\n                this.code = this.$store.getters.turtleCode \n        }\n    }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}