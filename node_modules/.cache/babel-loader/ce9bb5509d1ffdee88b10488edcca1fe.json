{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/store/modules/rdfeditor.store.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/store/modules/rdfeditor.store.js","mtime":1597240817679},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":1596446669078},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":1596446669324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogU3RvcmUgbW9kdWxlIHRvIGhhbmRsZSBSREYgRWRpdG9yIGNvbXBvbmVudCBzdG9yZSAqLwp2YXIgTjMgPSByZXF1aXJlKCduMycpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIC8vIEF0dHJpYnV0ZXMgb2YgdGhlIHJkZkVkaXRvciBjb21wb25lbnQgCiAgICB0dXJ0bGVDb2RlOiAnJywKICAgIHByZWZpeGVzOiBbXSwKICAgIHJkZnN0b3JlOiBuZXcgTjMuU3RvcmUoKSwKICAgIGVycm9yU3RhdHVzOiBmYWxzZSwKICAgIGVycm9yTWVzc2FnZTogJycKICB9LAogIGdldHRlcnM6IHsKICAgIC8vIGdldHRlcnMgYW5kIGNvbXB1dGVkIHByb3BzIG9mIHJkZkVkaXRvciAKICAgIGVycm9yU3RhdHVzOiBmdW5jdGlvbiBlcnJvclN0YXR1cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZXJyb3JTdGF0dXM7CiAgICB9LAogICAgZXJyb3JNZXNzYWdlOiBmdW5jdGlvbiBlcnJvck1lc3NhZ2Uoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmVycm9yTWVzc2FnZTsKICAgIH0sCiAgICB0dXJ0bGVDb2RlOiBmdW5jdGlvbiB0dXJ0bGVDb2RlKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50dXJ0bGVDb2RlOwogICAgfSwKICAgIHByZWZpeGVzOiBmdW5jdGlvbiBwcmVmaXhlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucHJlZml4ZXM7CiAgICB9LAogICAgcmVzdWx0c1JlYWR5OiBmdW5jdGlvbiByZXN1bHRzUmVhZHkoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnJlc3VsdHNSZWFkeTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgLy8gYmFjay1lbmQgZnVuY3Rpb25zIAogICAgdXBkYXRlQ29kZTogZnVuY3Rpb24gdXBkYXRlQ29kZShzdGF0ZSwgbmV3Q29kZSkgewogICAgICBzdGF0ZS50dXJ0bGVDb2RlID0gbmV3Q29kZTsKICAgIH0sCiAgICB1cGRhdGVQcmVmaXhlczogZnVuY3Rpb24gdXBkYXRlUHJlZml4ZXMoc3RhdGUsIG5ld1ByZWZpeGVzKSB7CiAgICAgIHN0YXRlLnByZWZpeGVzID0gbmV3UHJlZml4ZXM7CiAgICB9LAogICAgdXBkYXRlRXJyb3I6IGZ1bmN0aW9uIHVwZGF0ZUVycm9yKHN0YXRlLCBfcmVmKSB7CiAgICAgIHZhciBuZXdFcnJvclN0YXR1cyA9IF9yZWYubmV3RXJyb3JTdGF0dXMsCiAgICAgICAgICBuZXdFcnJvck1lc3NhZ2UgPSBfcmVmLm5ld0Vycm9yTWVzc2FnZTsKICAgICAgc3RhdGUuZXJyb3JTdGF0dXMgPSBuZXdFcnJvclN0YXR1cywgc3RhdGUuZXJyb3JNZXNzYWdlID0gbmV3RXJyb3JNZXNzYWdlOwogICAgfSwKICAgIGxvYWRSREY6IGZ1bmN0aW9uIGxvYWRSREYoc3RhdGUpIHsKICAgICAgdmFyIHBhcnNlciA9IG5ldyBOMy5QYXJzZXIoKTsKICAgICAgcGFyc2VyLnBhcnNlKHN0YXRlLnR1cnRsZUNvZGUsIGZ1bmN0aW9uIChfLCBxdWFkLCBwcmVmaXhlcykgewogICAgICAgIGlmIChxdWFkKSB7CiAgICAgICAgICBzdGF0ZS5yZGZzdG9yZS5hZGRRdWFkKHF1YWQuc3ViamVjdCwgcXVhZC5wcmVkaWNhdGUsIHF1YWQub2JqZWN0KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc3RhdGUucHJlZml4ZXMgPSBwcmVmaXhlczsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgdXBkYXRlQ29kZTogZnVuY3Rpb24gdXBkYXRlQ29kZShfcmVmMiwgbmV3Q29kZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQoJ3VwZGF0ZUNvZGUnLCBuZXdDb2RlKTsKICAgIH0sCiAgICB1cGRhdGVQcmVmaXhlczogZnVuY3Rpb24gdXBkYXRlUHJlZml4ZXMoX3JlZjMsIG5ld1ByZWZpeGVzKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgndXBkYXRlUHJlZml4ZXMnLCBuZXdQcmVmaXhlcyk7CiAgICB9LAogICAgbG9hZFJERjogZnVuY3Rpb24gbG9hZFJERihfcmVmNCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICBjb21taXQoJ2xvYWRSREYnKTsKICAgIH0sCiAgICBxdWVyeVN0b3JlOiBmdW5jdGlvbiBxdWVyeVN0b3JlKCkgewogICAgICBjb25zb2xlLmxvZygiVGhpcyBmdW5jdGlvbiBpcyB1bmRlciBjb25zdHJ1Y3Rpb24hIik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/store/modules/rdfeditor.store.js"],"names":["N3","require","namespaced","state","turtleCode","prefixes","rdfstore","Store","errorStatus","errorMessage","getters","resultsReady","mutations","updateCode","newCode","updatePrefixes","newPrefixes","updateError","newErrorStatus","newErrorMessage","loadRDF","parser","Parser","parse","_","quad","addQuad","subject","predicate","object","actions","commit","queryStore","console","log"],"mappings":"AAAA;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,UAAU,EAAE,EAFT;AAGHC,IAAAA,QAAQ,EAAE,EAHP;AAIHC,IAAAA,QAAQ,EAAE,IAAIN,EAAE,CAACO,KAAP,EAJP;AAKHC,IAAAA,WAAW,EAAE,KALV;AAMHC,IAAAA,YAAY,EAAE;AANX,GAFI;AAUXC,EAAAA,OAAO,EAAE;AACL;AACAF,IAAAA,WAAW,EAAE,qBAAAL,KAAK;AAAA,aAAIA,KAAK,CAACK,WAAV;AAAA,KAFb;AAGLC,IAAAA,YAAY,EAAE,sBAAAN,KAAK;AAAA,aAAIA,KAAK,CAACM,YAAV;AAAA,KAHd;AAILL,IAAAA,UAAU,EAAE,oBAAAD,KAAK;AAAA,aAAIA,KAAK,CAACC,UAAV;AAAA,KAJZ;AAKLC,IAAAA,QAAQ,EAAE,kBAAAF,KAAK;AAAA,aAAIA,KAAK,CAACE,QAAV;AAAA,KALV;AAMLM,IAAAA,YAAY,EAAE,sBAAAR,KAAK;AAAA,aAAIA,KAAK,CAACQ,YAAV;AAAA;AANd,GAVE;AAkBXC,EAAAA,SAAS,EAAE;AACP;AACAC,IAAAA,UAFO,sBAEKV,KAFL,EAEYW,OAFZ,EAEqB;AACxBX,MAAAA,KAAK,CAACC,UAAN,GAAmBU,OAAnB;AACH,KAJM;AAKPC,IAAAA,cALO,0BAKSZ,KALT,EAKgBa,WALhB,EAK6B;AAChCb,MAAAA,KAAK,CAACE,QAAN,GAAiBW,WAAjB;AACH,KAPM;AAQPC,IAAAA,WARO,uBAQMd,KARN,QAQgD;AAAA,UAAlCe,cAAkC,QAAlCA,cAAkC;AAAA,UAAlBC,eAAkB,QAAlBA,eAAkB;AACnDhB,MAAAA,KAAK,CAACK,WAAN,GAAoBU,cAApB,EACAf,KAAK,CAACM,YAAN,GAAqBU,eADrB;AAEH,KAXM;AAYPC,IAAAA,OAZO,mBAYEjB,KAZF,EAYS;AACZ,UAAMkB,MAAM,GAAG,IAAIrB,EAAE,CAACsB,MAAP,EAAf;AACAD,MAAAA,MAAM,CAACE,KAAP,CACIpB,KAAK,CAACC,UADV,EAEI,UAACoB,CAAD,EAAIC,IAAJ,EAAUpB,QAAV,EAAuB;AACnB,YAAIoB,IAAJ,EAAU;AACNtB,UAAAA,KAAK,CAACG,QAAN,CAAeoB,OAAf,CAAuBD,IAAI,CAACE,OAA5B,EAAqCF,IAAI,CAACG,SAA1C,EAAqDH,IAAI,CAACI,MAA1D;AACH,SAFD,MAEO;AACH1B,UAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACH;AACJ,OARL;AAUH;AAxBM,GAlBA;AA4CXyB,EAAAA,OAAO,EAAE;AACLjB,IAAAA,UAAU,EAAE,2BAAaC,OAAb,EAAyB;AAAA,UAAtBiB,MAAsB,SAAtBA,MAAsB;AACjCA,MAAAA,MAAM,CAAC,YAAD,EAAejB,OAAf,CAAN;AACH,KAHI;AAILC,IAAAA,cAAc,EAAE,+BAAWC,WAAX,EAA2B;AAAA,UAAzBe,MAAyB,SAAzBA,MAAyB;AACvCA,MAAAA,MAAM,CAAC,gBAAD,EAAmBf,WAAnB,CAAN;AACH,KANI;AAOLI,IAAAA,OAAO,EAAE,wBAAc;AAAA,UAAZW,MAAY,SAAZA,MAAY;AACnBA,MAAAA,MAAM,CAAC,SAAD,CAAN;AACH,KATI;AAULC,IAAAA,UAAU,EAAE,sBAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AAZI;AA5CE,CAAf","sourcesContent":["/* Store module to handle RDF Editor component store */\n\nconst N3 = require('n3')\n\nexport default {\n    namespaced: true,\n    state: {\n        // Attributes of the rdfEditor component \n        turtleCode: '',\n        prefixes: [],\n        rdfstore: new N3.Store(), \n        errorStatus: false, \n        errorMessage: '',\n    },\n    getters: {\n        // getters and computed props of rdfEditor \n        errorStatus: state => state.errorStatus, \n        errorMessage: state => state.errorMessage,\n        turtleCode: state => state.turtleCode,\n        prefixes: state => state.prefixes,\n        resultsReady: state => state.resultsReady,\n    },\n    mutations: {\n        // back-end functions \n        updateCode (state, newCode) {\n            state.turtleCode = newCode \n        },\n        updatePrefixes (state, newPrefixes) {\n            state.prefixes = newPrefixes\n        },\n        updateError (state, {newErrorStatus, newErrorMessage}) {\n            state.errorStatus = newErrorStatus, \n            state.errorMessage = newErrorMessage \n        },\n        loadRDF (state) {\n            const parser = new N3.Parser();\n            parser.parse(\n                state.turtleCode, \n                (_, quad, prefixes) => {\n                    if (quad) {\n                        state.rdfstore.addQuad(quad.subject, quad.predicate, quad.object)\n                    } else {\n                        state.prefixes = prefixes \n                    }\n                }\n            )\n        }\n    },\n    actions: {\n        updateCode: ({ commit }, newCode) => {\n            commit('updateCode', newCode) \n        },\n        updatePrefixes: ({commit}, newPrefixes) => {\n            commit('updatePrefixes', newPrefixes)\n        },\n        loadRDF: ({commit}) => {\n            commit('loadRDF')\n        },\n        queryStore: () => {\n            console.log(\"This function is under construction!\")\n        }\n    }\n}"]}]}