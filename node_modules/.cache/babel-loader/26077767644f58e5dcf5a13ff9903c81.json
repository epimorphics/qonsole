{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/RDF-Editor.vue","mtime":1593699607869},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ29kZUVkaXRvciBmcm9tICcuL0NvZGUtRWRpdG9yLnZ1ZSc7CmltcG9ydCBCdXR0b25zIGZyb20gJy4vQnV0dG9ucy52dWUnOwppbXBvcnQgT3V0cHV0IGZyb20gJy4vT3V0cHV0LnZ1ZSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlLmpzJzsKaW1wb3J0IHsgTXVsdGlwYW5lLCBNdWx0aXBhbmVSZXNpemVyIH0gZnJvbSAndnVlLW11bHRpcGFuZSc7CmltcG9ydCBTUEFSUUxFZGl0b3IgZnJvbSAnLi9TUEFSUUwtRWRpdG9yLnZ1ZSc7CmltcG9ydCBHcmlkIGZyb20gJ2dyaWRqcy12dWUnOyAvLyBjb25zdCBOMyA9IHJlcXVpcmUoJ24zJyk7Ci8vIGZ1bmN0aW9uIHBhcnNlVHVydGxlKGNvZGUpIHsKLy8gICAgIC8vIGNvbnN0IHBhcnNlciA9IG5ldyBOMy5QYXJzZXIoKTsKLy8gICAgIC8vIHBhcnNlci5wYXJzZShjb2RlLCAKLy8gICAgIC8vICAgICAoZXJyb3IsIHF1YWQsIHByZWZpeGVzKSA9PiB7Ci8vICAgICAvLyAgICAgICAgIGlmIChlcnJvcikgewovLyAgICAgLy8gICAgICAgICAgICAgc3RvcmUuY29tbWl0KCdjaGFuZ2VFcnJvcicsIHRydWUpCi8vICAgICAvLyAgICAgICAgICAgICBzdG9yZS5jb21taXQoJ3VwZGF0ZUVycm9yTWVzc2FnZScsIGVycm9yKQovLyAgICAgLy8gICAgICAgICAgICAgcmV0dXJuIGVycm9yIAovLyAgICAgLy8gICAgICAgICB9IGVsc2UgaWYgKHByZWZpeGVzKSB7Ci8vICAgICAvLyAgICAgICAgICAgICB2YXIgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHByZWZpeGVzKQovLyAgICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coZW50cmllcykKLy8gICAgIC8vICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKykgewovLyAgICAgLy8gICAgICAgICAgICAgICAgIHN0b3JlLmNvbW1pdCgnYWRkUHJlZml4JywgZW50cmllc1tpXSkKLy8gICAgIC8vICAgICAgICAgICAgIH0KLy8gICAgIC8vICAgICAgICAgfSBlbHNlIHsKLy8gICAgIC8vICAgICAgICAgICAgIHN0b3JlLmNvbW1pdCgncG9wdWxhdGVSREZTdG9yZScsIHF1YWQpCi8vICAgICAvLyAgICAgICAgIH0KLy8gICAgIC8vICAgICB9KQovLyAgICAgc3RvcmUuCi8vIH0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUkRGRWRpdG9yJywKICBjb21wb25lbnRzOiB7CiAgICBNdWx0aXBhbmU6IE11bHRpcGFuZSwKICAgIE11bHRpcGFuZVJlc2l6ZXI6IE11bHRpcGFuZVJlc2l6ZXIsCiAgICBDb2RlRWRpdG9yOiBDb2RlRWRpdG9yLAogICAgQnV0dG9uczogQnV0dG9ucywKICAgIE91dHB1dDogT3V0cHV0LAogICAgU1BBUlFMRWRpdG9yOiBTUEFSUUxFZGl0b3IsCiAgICBHcmlkOiBHcmlkCiAgfSwKICBzdG9yZTogc3RvcmUsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxhbmd1YWdlOiAndHVydGxlJywKICAgICAgcGFyc2VkUkRGOiAnJywKICAgICAgcmRmc3BhcnFsOiB0cnVlLAogICAgICBhdXRvV2lkdGg6IHRydWUsCiAgICAgIHBhZ2luYXRpb246IHRydWUsCiAgICAgIHNlYXJjaDogdHJ1ZSwKICAgICAgc29ydDogdHJ1ZSwKICAgICAgdGhlbWU6ICdtZXJtYWlkJywKICAgICAgd2lkdGg6ICcxMDAlJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uIGJ1dHRvbkNsaWNrZWQoYnV0dG9uKSB7CiAgICAgIHN3aXRjaCAoYnV0dG9uKSB7CiAgICAgICAgY2FzZSAiQ2xlYXIiOgogICAgICAgICAgdGhpcy4kcmVmcy5jb2RlRWRpdG9yLmNsZWFyRWRpdG9yKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiTG9hZCI6CiAgICAgICAgICB0cnkgewogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NsZWFyVHVydGxlU3RvcmUnKTsgLy8gcGFyc2VUdXJ0bGUodGhpcy4kc3RvcmUuZ2V0dGVycy50dXJ0bGVDb2RlKQoKICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdsb2FkUkRGJyk7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnY2hhbmdlRXJyb3InLCBmYWxzZSk7CiAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICB9CgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICBsb2FkVGV4dEZyb21GaWxlOiBmdW5jdGlvbiBsb2FkVGV4dEZyb21GaWxlKGV2KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZmlsZSA9IGV2LnRhcmdldC5maWxlc1swXTsKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgogICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlVHVydGxlQ29kZScsIGUudGFyZ2V0LnJlc3VsdCk7CiAgICAgIH07CgogICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsKICAgIH0sCiAgICBnZXRWYXJpYWJsZXM6IGZ1bmN0aW9uIGdldFZhcmlhYmxlcyhyZXN1bHRzKSB7CiAgICAgIHZhciB2YXJpYWJsZXMgPSBbXTsKCiAgICAgIHRyeSB7CiAgICAgICAgdmFyIGVudHJpZXMgPSBPYmplY3QuZW50cmllcyhyZXN1bHRzWzBdKTsKICAgICAgICBjb25zb2xlLmxvZyhlbnRyaWVzKTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXJpYWJsZXMucHVzaChlbnRyaWVzW2ldWzBdKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB2YXJpYWJsZXM7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0KICAgIH0sCiAgICBnZXRSb3dzOiBmdW5jdGlvbiBnZXRSb3dzKHJlc3VsdHMpIHsKICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy4kc3RvcmUuY29tbWl0KCd1cGRhdGVDdXJyZW50TGFuZ3VhZ2UnLCB0aGlzLmxhbmd1YWdlKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICByZGZzdG9yZVNpemU6IGZ1bmN0aW9uIHJkZnN0b3JlU2l6ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMucmRmc3RvcmUuc2l6ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["RDF-Editor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <Multipane class=\"vertical-panes\" layout=\"vertical\">\n        <div class=\"pane\" >\n            <CodeEditor :language=\"language\" \n            ref=\"codeEditor\" \n            @sendCode=\"code = $event\" />\n            <input type=\"file\" @change=\"loadTextFromFile\">\n            <p v-show=\"rdfstoreSize > 0\"> Loaded triples: {{ rdfstoreSize }} </p>\n            <Buttons :language=\"language\"\n                @buttonClicked=\"buttonClicked\" /> \n            <Output />\n        </div>\n        <MultipaneResizer></MultipaneResizer>\n        <div class=\"pane\" >\n            <SPARQLEditor :rdfsparql=\"rdfsparql\"/>\n        </div>\n    </Multipane>        \n    <grid :cols=\"getVariables(this.$store.getters.storeQueryResult)\" :rows=\"getRows(this.$store.getters.storeQueryResult)\" \n          :auto-width=\"autoWidth\"\n          :language=\"{}\"\n          :pagination=\"pagination\"\n          :search=\"search\"\n          :sort=\"sort\"\n          :width=\"width\"\n          v-if=\"this.$store.getters.storeQueryResult!=''\">\n    </grid>\n</div>\n</template>\n<script>\nimport CodeEditor from './Code-Editor.vue'\nimport Buttons from './Buttons.vue' \nimport Output from './Output.vue'\nimport store from '@/store.js'\nimport { Multipane, MultipaneResizer } from 'vue-multipane'\nimport SPARQLEditor from './SPARQL-Editor.vue'\nimport Grid from 'gridjs-vue'\n\n// const N3 = require('n3');\n\n// function parseTurtle(code) {\n//     // const parser = new N3.Parser();\n//     // parser.parse(code, \n//     //     (error, quad, prefixes) => {\n//     //         if (error) {\n//     //             store.commit('changeError', true)\n//     //             store.commit('updateErrorMessage', error)\n//     //             return error \n//     //         } else if (prefixes) {\n//     //             var entries = Object.entries(prefixes)\n//     //             console.log(entries)\n//     //             for (var i = 0; i < entries.length; i++) {\n//     //                 store.commit('addPrefix', entries[i])\n//     //             }\n//     //         } else {\n//     //             store.commit('populateRDFStore', quad)\n//     //         }\n//     //     })\n//     store.\n// }\n\nexport default {\n    name: 'RDFEditor',\n    components: {\n        Multipane,\n        MultipaneResizer, \n        CodeEditor,\n        Buttons,\n        Output,\n        SPARQLEditor,\n        Grid\n    },\n    store: store, \n    data () {\n        return {\n            language: 'turtle', \n            parsedRDF: '' ,\n            rdfsparql: true, \n            autoWidth: true,\n            pagination: true,\n            search: true,\n            sort: true,\n            theme: 'mermaid',\n            width: '100%',\n        }\n    },\n    methods: {\n        buttonClicked (button) {\n            switch (button) { \n                case \"Clear\":\n                    this.$refs.codeEditor.clearEditor(); \n                    break; \n                case \"Load\":\n                    try {\n                        this.$store.commit('clearTurtleStore')\n                        // parseTurtle(this.$store.getters.turtleCode)\n                        this.$store.commit('loadRDF')\n                        this.$store.commit('changeError', false)\n                    } catch (error) {\n                        console.log(error)\n                    }\n                    break;\n            }\n        },\n        loadTextFromFile: function (ev) {\n            const file = ev.target.files[0];\n            const reader = new FileReader();\n            reader.onload = e => this.$store.commit('updateTurtleCode', e.target.result)\n            reader.readAsText(file)\n        },\n        getVariables: function (results) {\n            var variables = []\n            try {\n                var entries = Object.entries(results[0])\n                console.log(entries)\n                for (var i = 0; i < entries.length; i++) {\n                    variables.push(entries[i][0])\n                }\n                return variables\n            } catch (err) {\n                console.log(err)\n            } \n        },\n        getRows: function (results) {\n            console.log(results)\n        }\n    },\n    mounted: function () {\n        this.$store.commit('updateCurrentLanguage', this.language)\n    },\n    computed: {\n        rdfstoreSize: function () {\n            return this.$store.getters.rdfstore.size\n        }\n    }\n}\n</script>\n<style >\ndiv {\n    line-height: 1.5; \n}\n.vertical-panes {\n  width: 100%;\n  height: 400px;\n  border: 1px solid #ccc;\n}\n.vertical-panes > .pane {\n    width: 50%; \n    text-align: left;\n    padding: 15px;\n    overflow: hidden;\n    background: #eee;\n}\n.vertical-panes > .pane ~ .pane {\n  border-left: 1px solid #ccc;\n}\n</style>"],"sourceRoot":"src/components"}]}