{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/store/modules/rdfeditor.store.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/store/modules/rdfeditor.store.js","mtime":1597151293967},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":1596446669078},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":1596446669324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmVwc2lsb24iOwoKLyogU3RvcmUgbW9kdWxlIHRvIGhhbmRsZSBSREYgRWRpdG9yIGNvbXBvbmVudCBzdG9yZSAqLwp2YXIgcmRmc3RvcmUgPSByZXF1aXJlKCdyZGZzdG9yZScpOwoKcmRmc3RvcmUuY3JlYXRlKGZ1bmN0aW9uIChlcnJvciwgc3RvcmUpIHsKICBpZiAoIWVycm9yKSB7CiAgICB2YXIgbG9jYWxzdG9yZSA9IHN0b3JlOwogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICAvLyBBdHRyaWJ1dGVzIG9mIHRoZSByZGZFZGl0b3IgY29tcG9uZW50IAogICAgdHVydGxlQ29kZTogJycsCiAgICBwcmVmaXhlczogW10sCiAgICByZGZzdG9yZTogbG9jYWxzdG9yZSwKICAgIC8vIGRlZmF1bHRHcmFwaDogW10sIAogICAgZXJyb3JTdGF0dXM6IGZhbHNlLAogICAgZXJyb3JNZXNzYWdlOiAnJywKICAgIHN0b3JlU2l6ZTogMAogIH0sCiAgZ2V0dGVyczogewogICAgLy8gZ2V0dGVycyBhbmQgY29tcHV0ZWQgcHJvcHMgb2YgcmRmRWRpdG9yIAogICAgZXJyb3JTdGF0dXM6IGZ1bmN0aW9uIGVycm9yU3RhdHVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5lcnJvclN0YXR1czsKICAgIH0sCiAgICBlcnJvck1lc3NhZ2U6IGZ1bmN0aW9uIGVycm9yTWVzc2FnZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZXJyb3JNZXNzYWdlOwogICAgfSwKICAgIHR1cnRsZUNvZGU6IGZ1bmN0aW9uIHR1cnRsZUNvZGUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnR1cnRsZUNvZGU7CiAgICB9LAogICAgcHJlZml4ZXM6IGZ1bmN0aW9uIHByZWZpeGVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcmVmaXhlczsKICAgIH0sCiAgICByZXN1bHRzUmVhZHk6IGZ1bmN0aW9uIHJlc3VsdHNSZWFkeShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucmVzdWx0c1JlYWR5OwogICAgfSwKICAgIHN0b3JlU2l6ZTogZnVuY3Rpb24gc3RvcmVTaXplKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zdG9yZVNpemU7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIC8vIGJhY2stZW5kIGZ1bmN0aW9ucyAKICAgIHVwZGF0ZUNvZGU6IGZ1bmN0aW9uIHVwZGF0ZUNvZGUoc3RhdGUsIG5ld0NvZGUpIHsKICAgICAgc3RhdGUudHVydGxlQ29kZSA9IG5ld0NvZGU7CiAgICB9LAogICAgdXBkYXRlUHJlZml4ZXM6IGZ1bmN0aW9uIHVwZGF0ZVByZWZpeGVzKHN0YXRlLCBuZXdQcmVmaXhlcykgewogICAgICBzdGF0ZS5wcmVmaXhlcyA9IG5ld1ByZWZpeGVzOwogICAgfSwKICAgIG5ld1N0b3JlOiBmdW5jdGlvbiBuZXdTdG9yZShzdGF0ZSkgewogICAgICBzdGF0ZS5wcmVmaXhlcyA9IFtdOwogICAgICBzdGF0ZS5yZGZzdG9yZSA9IG5ldyByZGZTdG9yZS5TdG9yZShmdW5jdGlvbiAoZXJyb3IsIHN0b3JlKSB7CiAgICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgICBzdGF0ZS5lcnJvclN0YXR1cyA9IHRydWU7CiAgICAgICAgICBzdGF0ZS5lcnJvck1lc3NhZ2UgPSBlcnJvcjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc3RhdGUuZXJyb3JTdGF0dXMgPSBmYWxzZTsKICAgICAgICAgIHN0YXRlLmVycm9yTWVzc2FnZSA9ICcnOwogICAgICAgICAgcmV0dXJuIHN0b3JlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlRXJyb3I6IGZ1bmN0aW9uIHVwZGF0ZUVycm9yKHN0YXRlLCBfcmVmKSB7CiAgICAgIHZhciBuZXdFcnJvclN0YXR1cyA9IF9yZWYubmV3RXJyb3JTdGF0dXMsCiAgICAgICAgICBuZXdFcnJvck1lc3NhZ2UgPSBfcmVmLm5ld0Vycm9yTWVzc2FnZTsKICAgICAgc3RhdGUuZXJyb3JTdGF0dXMgPSBuZXdFcnJvclN0YXR1cywgc3RhdGUuZXJyb3JNZXNzYWdlID0gbmV3RXJyb3JNZXNzYWdlOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy8gRS5nLiBnZXR0aW5nIG51bWJlciBvZiB0cmlwbGVzIGN1cnJlbnRseSBpbiBzdG9yZT8KICAgIHVwZGF0ZUNvZGU6IGZ1bmN0aW9uIHVwZGF0ZUNvZGUoX3JlZjIsIG5ld0NvZGUpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCd1cGRhdGVDb2RlJywgbmV3Q29kZSk7CiAgICB9LAogICAgdXBkYXRlUHJlZml4ZXM6IGZ1bmN0aW9uIHVwZGF0ZVByZWZpeGVzKF9yZWYzLCBuZXdQcmVmaXhlcykgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICBjb21taXQoJ3VwZGF0ZVByZWZpeGVzJywgbmV3UHJlZml4ZXMpOwogICAgfSwKICAgIG5ld1N0b3JlOiBmdW5jdGlvbiBuZXdTdG9yZShfcmVmNCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICBjb21taXQoJ25ld1N0b3JlJyk7CiAgICB9LAogICAgbG9hZFJERjogZnVuY3Rpb24gbG9hZFJERihfcmVmNSkgewogICAgICB2YXIgc3RhdGUgPSBfcmVmNS5zdGF0ZSwKICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKCiAgICAgIGlmIChzdGF0ZS50dXJ0bGVDb2RlID09ICIiKSB7CiAgICAgICAgY29tbWl0KCd1cGRhdGVFcnJvcicsIHsKICAgICAgICAgIG5ld0Vycm9yU3RhdHVzOiB0cnVlLAogICAgICAgICAgbmV3RXJyb3JNZXNzYWdlOiAiUGxlYXNlIGVudGVyIHR1cnRsZSBjb2RlISIKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzdGF0ZS5yZGZzdG9yZS5sb2FkKCJ0ZXh0L3R1cnRsZSIsIHN0YXRlLnR1cnRsZUNvZGUsIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgICAgIGNvbW1pdCgndXBkYXRlRXJyb3InLCB7CiAgICAgICAgICAgICAgbmV3RXJyb3JTdGF0dXM6IHRydWUsCiAgICAgICAgICAgICAgbmV3RXJyb3JNZXNzYWdlOiBlcnJvci5tZXNzYWdlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVFcnJvcicsIHsKICAgICAgICAgICAgICBuZXdFcnJvclN0YXR1czogZmFsc2UsCiAgICAgICAgICAgICAgbmV3RXJyb3JNZXNzYWdlOiAnJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsgLy8gY29uc29sZS5sb2coIlN0b3JlIGxvYWRlZCEiKQogICAgICB9IC8vIEdldCByZWdpc3RlcmVkIGdyYXBocyBmb3IgZGVidWdnaW5nIAoKCiAgICAgIHN0YXRlLnJkZnN0b3JlLnJlZ2lzdGVyZWRHcmFwaHMoZnVuY3Rpb24gKGVycm9yLCBncmFwaHMpIHsKICAgICAgICBpZiAoIWVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhncmFwaHMpOwogICAgICAgIH0KICAgICAgfSk7IC8vIFRvIGdldCB0aGUgc2l6ZSwgZXhwb3J0IHRvIE4zIGdyYXBoIG9iamVjdD8KCiAgICAgIHN0YXRlLnJkZnN0b3JlLmdyYXBoKGZ1bmN0aW9uIChlcnJvciwgZ3JhcGgpIHsKICAgICAgICBpZiAoIWVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhncmFwaCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHF1ZXJ5U3RvcmU6IGZ1bmN0aW9uIHF1ZXJ5U3RvcmUoX3JlZjYsIHNwYXJxbENvZGUpIHsKICAgICAgdmFyIHN0YXRlID0gX3JlZjYuc3RhdGUsCiAgICAgICAgICBjb21taXQgPSBfcmVmNi5jb21taXQsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY2LmRpc3BhdGNoOwogICAgICB2YXIgdDAgPSBwZXJmb3JtYW5jZS5ub3coKTsKCiAgICAgIHRyeSB7CiAgICAgICAgc3RhdGUucmRmc3RvcmUuZXhlY3V0ZShzcGFycWxDb2RlLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMpIHsKICAgICAgICAgIGlmICghZXJyb3IpIHsKICAgICAgICAgICAgY29tbWl0KCdzcGFycWxFZGl0b3JTdG9yZS91cGRhdGVFcnJvcicsIHsKICAgICAgICAgICAgICBuZXdFcnJvclN0YXR1czogZmFsc2UsCiAgICAgICAgICAgICAgbmV3RXJyb3JNZXNzYWdlOiAnJwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3VwZGF0ZUxvY2FsUmVzdWx0JywgcmVzdWx0cywgewogICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29tbWl0KCdzcGFycWxFZGl0b3JTdG9yZS91cGRhdGVFcnJvcicsIHsKICAgICAgICAgIG5ld0Vycm9yU3RhdHVzOiB0cnVlLAogICAgICAgICAgbmV3RXJyb3JNZXNzYWdlOiBlcnJvci5tZXNzYWdlCiAgICAgICAgfSwgewogICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgIH0pOwogICAgICB9CgogICAgICB2YXIgdDEgPSBwZXJmb3JtYW5jZS5ub3coKTsKICAgICAgY29tbWl0KCdzcGFycWxFZGl0b3JTdG9yZS91cGRhdGVMb2NhbFJlc3VsdFRpbWUnLCBNYXRoLnJvdW5kKCh0MSAtIHQwKSAqIDEwMCArIE51bWJlci5FUFNJTE9OKSAvIDEwMCwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/store/modules/rdfeditor.store.js"],"names":["rdfstore","require","create","error","store","localstore","namespaced","state","turtleCode","prefixes","errorStatus","errorMessage","storeSize","getters","resultsReady","mutations","updateCode","newCode","updatePrefixes","newPrefixes","newStore","rdfStore","Store","updateError","newErrorStatus","newErrorMessage","actions","commit","loadRDF","load","message","registeredGraphs","graphs","console","log","graph","queryStore","sparqlCode","dispatch","t0","performance","now","execute","results","root","t1","Math","round","Number","EPSILON"],"mappings":"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","sourcesContent":["/* Store module to handle RDF Editor component store */\n\nvar rdfstore = require('rdfstore')\nrdfstore.create(function(error, store) {\n    if (!error) {\n        var localstore = store \n    }\n});\n\nexport default {\n    namespaced: true,\n    state: {\n        // Attributes of the rdfEditor component \n        turtleCode: '',\n        prefixes: [],\n        rdfstore: localstore, \n        // defaultGraph: [], \n        errorStatus: false, \n        errorMessage: '',\n        storeSize: 0, \n    },\n    getters: {\n        // getters and computed props of rdfEditor \n        errorStatus: state => state.errorStatus, \n        errorMessage: state => state.errorMessage,\n        turtleCode: state => state.turtleCode,\n        prefixes: state => state.prefixes,\n        resultsReady: state => state.resultsReady,\n        storeSize: state => state.storeSize, \n    },\n    mutations: {\n        // back-end functions \n        updateCode (state, newCode) {\n            state.turtleCode = newCode \n        },\n        updatePrefixes (state, newPrefixes) {\n            state.prefixes = newPrefixes\n        },\n        newStore (state) {\n            state.prefixes = []\n            state.rdfstore = new rdfStore.Store(function(error, store) {\n                if (error) {\n                    state.errorStatus = true \n                    state.errorMessage = error \n                }\n                else {\n                    state.errorStatus = false\n                    state.errorMessage = '' \n                    return store\n                }\n            })\n        },\n        updateError (state, {newErrorStatus, newErrorMessage}) {\n            state.errorStatus = newErrorStatus, \n            state.errorMessage = newErrorMessage \n        }\n    },\n    actions: {\n        // E.g. getting number of triples currently in store?\n        updateCode: ({ commit }, newCode) => {\n            commit('updateCode', newCode) \n        },\n        updatePrefixes: ({commit}, newPrefixes) => {\n            commit('updatePrefixes', newPrefixes)\n        },\n        newStore: ({commit}) => {\n            commit('newStore')\n        },\n        loadRDF: ({state, commit}) => {\n            if (state.turtleCode == \"\") {\n                commit('updateError', {newErrorStatus: true, newErrorMessage: \"Please enter turtle code!\"})\n            } else {\n                state.rdfstore.load(\"text/turtle\", state.turtleCode, function(error) {\n                    if (error) {\n                        commit('updateError', {newErrorStatus: true, newErrorMessage: error.message})\n                    } else {\n                        commit('updateError', {newErrorStatus: false, newErrorMessage: ''})\n                    }\n                })\n                // console.log(\"Store loaded!\")\n            }\n            \n            // Get registered graphs for debugging \n            state.rdfstore.registeredGraphs(function(error, graphs){\n                if (!error) {\n                    console.log(graphs)\n                }\n            })\n            // To get the size, export to N3 graph object?\n            state.rdfstore.graph(function(error, graph){\n                if (!error) {\n                    console.log(graph)\n                } else {\n                    console.log(error)\n                }\n            });\n        },\n        queryStore: ({state, commit, dispatch}, sparqlCode) => {\n            var t0 = performance.now()\n            try {\n                state.rdfstore.execute(sparqlCode, function(error, results) {\n                    if (!error) {\n                        commit('sparqlEditorStore/updateError', {newErrorStatus: false, newErrorMessage: ''}, {root: true})\n                        dispatch('sparqlEditorStore/updateLocalResult', results, {root: true})\n                    }\n                })\n            } catch (error) {\n                commit('sparqlEditorStore/updateError', {newErrorStatus: true, newErrorMessage: error.message}, {root: true})\n            }\n            var t1 = performance.now()\n            commit('sparqlEditorStore/updateLocalResultTime', (Math.round( (t1-t0) * 100 + Number.EPSILON ) / 100), {root:true})\n        }\n    }\n}"]}]}