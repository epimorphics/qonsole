{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/store.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/store.js","mtime":1593531307834},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsKdmFyIHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICAvLyBFcnJvciBoYW5kbGluZyAgCiAgICBlcnJvcjogZmFsc2UsCiAgICBlcnJvck1lc3NhZ2U6ICcnLAogICAgLy8gUkRGIAogICAgdHVydGxlQ29kZTogJycsCiAgICAvLyBTUEFSUUwKICAgIFNQQVJRTENvZGU6ICcnLAogICAganNvblJlc3BvbnNlOiAnJyAvLyBQcmVmaXhlcyAKCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHVwZGF0ZVNQQVJRTENvZGU6IGZ1bmN0aW9uIHVwZGF0ZVNQQVJRTENvZGUoc3RhdGUsIG5ld0NvZGUpIHsKICAgICAgc3RhdGUuU1BBUlFMQ29kZSA9IG5ld0NvZGU7CiAgICB9LAogICAgdXBkYXRlVHVydGxlQ29kZTogZnVuY3Rpb24gdXBkYXRlVHVydGxlQ29kZShzdGF0ZSwgbmV3Q29kZSkgewogICAgICBzdGF0ZS50dXJ0bGVDb2RlID0gbmV3Q29kZTsKICAgIH0sCiAgICB1cGRhdGVKU09OUmVzcG9uc2U6IGZ1bmN0aW9uIHVwZGF0ZUpTT05SZXNwb25zZShzdGF0ZSwgbmV3UmVzcG9uc2UpIHsKICAgICAgc3RhdGUuanNvblJlc3BvbnNlID0gbmV3UmVzcG9uc2U7CiAgICB9LAogICAgY2hhbmdlRXJyb3I6IGZ1bmN0aW9uIGNoYW5nZUVycm9yKHN0YXRlLCBib29sZWFuKSB7CiAgICAgIHN0YXRlLmVycm9yID0gYm9vbGVhbjsKICAgIH0sCiAgICB1cGRhdGVFcnJvck1lc3NhZ2U6IGZ1bmN0aW9uIHVwZGF0ZUVycm9yTWVzc2FnZShzdGF0ZSwgZXJyb3JNZXNzYWdlKSB7CiAgICAgIHN0YXRlLmVycm9yTWVzc2FnZSA9IGVycm9yTWVzc2FnZTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIFNQQVJRTENvZGU6IGZ1bmN0aW9uIFNQQVJRTENvZGUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLlNQQVJRTENvZGU7CiAgICB9LAogICAganNvblJlc3BvbnNlOiBmdW5jdGlvbiBqc29uUmVzcG9uc2Uoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmpzb25SZXNwb25zZTsKICAgIH0sCiAgICBlcnJvck1lc3NhZ2U6IGZ1bmN0aW9uIGVycm9yTWVzc2FnZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZXJyb3JNZXNzYWdlOwogICAgfSwKICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZXJyb3I7CiAgICB9LAogICAgdHVydGxlQ29kZTogZnVuY3Rpb24gdHVydGxlQ29kZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudHVydGxlQ29kZTsKICAgIH0KICB9Cn0pOwpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/store.js"],"names":["Vue","Vuex","use","store","Store","state","error","errorMessage","turtleCode","SPARQLCode","jsonResponse","mutations","updateSPARQLCode","newCode","updateTurtleCode","updateJSONResponse","newResponse","changeError","boolean","updateErrorMessage","getters"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,IAAME,KAAK,GAAG,IAAIF,IAAI,CAACG,KAAT,CAAe;AAC3BC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,YAAY,EAAE,EAHT;AAIL;AACAC,IAAAA,UAAU,EAAE,EALP;AAOL;AACAC,IAAAA,UAAU,EAAE,EARP;AASLC,IAAAA,YAAY,EAAE,EATT,CAWL;;AAXK,GADoB;AAe3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,gBADS,4BACSP,KADT,EACgBQ,OADhB,EACyB;AAChCR,MAAAA,KAAK,CAACI,UAAN,GAAmBI,OAAnB;AACD,KAHQ;AAITC,IAAAA,gBAJS,4BAIST,KAJT,EAIgBQ,OAJhB,EAIyB;AAChCR,MAAAA,KAAK,CAACG,UAAN,GAAmBK,OAAnB;AACD,KANQ;AAOTE,IAAAA,kBAPS,8BAOWV,KAPX,EAOkBW,WAPlB,EAO+B;AACtCX,MAAAA,KAAK,CAACK,YAAN,GAAqBM,WAArB;AACD,KATQ;AAUTC,IAAAA,WAVS,uBAUIZ,KAVJ,EAUWa,OAVX,EAUoB;AAC3Bb,MAAAA,KAAK,CAACC,KAAN,GAAcY,OAAd;AACD,KAZQ;AAaTC,IAAAA,kBAbS,8BAaWd,KAbX,EAakBE,YAblB,EAagC;AACvCF,MAAAA,KAAK,CAACE,YAAN,GAAqBA,YAArB;AACD;AAfQ,GAfgB;AAgC3Ba,EAAAA,OAAO,EAAE;AACLX,IAAAA,UAAU,EAAE,oBAAAJ,KAAK;AAAA,aAAIA,KAAK,CAACI,UAAV;AAAA,KADZ;AAELC,IAAAA,YAAY,EAAE,sBAAAL,KAAK;AAAA,aAAIA,KAAK,CAACK,YAAV;AAAA,KAFd;AAGLH,IAAAA,YAAY,EAAE,sBAAAF,KAAK;AAAA,aAAIA,KAAK,CAACE,YAAV;AAAA,KAHd;AAILD,IAAAA,KAAK,EAAE,eAAAD,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAV;AAAA,KAJP;AAKLE,IAAAA,UAAU,EAAE,oBAAAH,KAAK;AAAA,aAAIA,KAAK,CAACG,UAAV;AAAA;AALZ;AAhCkB,CAAf,CAAd;AAyCA,eAAeL,KAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state: {\n    // Error handling  \n    error: false,\n    errorMessage: '', \n    // RDF \n    turtleCode: '',\n\n    // SPARQL\n    SPARQLCode: '',\n    jsonResponse: '',\n\n    // Prefixes \n\n  },\n  mutations: {\n    updateSPARQLCode (state, newCode) {\n      state.SPARQLCode = newCode \n    },\n    updateTurtleCode (state, newCode) {\n      state.turtleCode = newCode\n    }, \n    updateJSONResponse (state, newResponse) {\n      state.jsonResponse = newResponse\n    },\n    changeError (state, boolean) {\n      state.error = boolean \n    },\n    updateErrorMessage (state, errorMessage) {\n      state.errorMessage = errorMessage\n    }\n  },\n  getters: {\n      SPARQLCode: state => state.SPARQLCode,\n      jsonResponse: state => state.jsonResponse, \n      errorMessage: state => state.errorMessage,\n      error: state => state.error,\n      turtleCode: state => state.turtleCode\n  }\n})\n\nexport default store "]}]}