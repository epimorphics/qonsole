{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js??ref--13-0!/home/anhelka/Documents/epimorphics/qonsole/src/store.rdfEditor.js","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/store.rdfEditor.js","mtime":1594302478818},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJkZkVkaXRvciA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBmdW5jdGlvbiBzdGF0ZSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVycm9yOiBmYWxzZSwKICAgICAgZXJyb3JNZXNzYWdlOiAnJywKICAgICAgdHVydGxlQ29kZTogJycKICAgIH07CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHVwZGF0ZVRoaXNUdXJ0bGVDb2RlOiBmdW5jdGlvbiB1cGRhdGVUaGlzVHVydGxlQ29kZShzdGF0ZSwgbmV3Q29kZSkgewogICAgICBzdGF0ZS50dXJ0bGVDb2RlID0gbmV3Q29kZTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWRSREY6IGZ1bmN0aW9uIGxvYWRSREYoX3JlZiwgc3RhdGUpIHsKICAgICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgZGlzcGF0Y2goJ2RiL2FkZEdyYXBoJywgc3RhdGUudHVydGxlQ29kZSwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlVHVydGxlQ29kZTogZnVuY3Rpb24gdXBkYXRlVHVydGxlQ29kZShfcmVmMiwgbmV3Q29kZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQoJ3VwZGF0ZVRoaXNUdXJ0bGVDb2RlJywgbmV3Q29kZSk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBlcnJvcjogZnVuY3Rpb24gZXJyb3Ioc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmVycm9yOwogICAgfSwKICAgIGVycm9yTWVzc2FnZTogZnVuY3Rpb24gZXJyb3JNZXNzYWdlKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5lcnJvck1lc3NhZ2U7CiAgICB9LAogICAgdHVydGxlQ29kZTogZnVuY3Rpb24gdHVydGxlQ29kZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudHVydGxlQ29kZTsKICAgIH0sCiAgICByZGZzdG9yZTogZnVuY3Rpb24gcmRmc3RvcmUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnJkZnN0b3JlOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHJkZkVkaXRvcjogcmRmRWRpdG9yCn07"},{"version":3,"sources":["/home/anhelka/Documents/epimorphics/qonsole/src/store.rdfEditor.js"],"names":["rdfEditor","namespaced","state","error","errorMessage","turtleCode","mutations","updateThisTurtleCode","newCode","actions","loadRDF","dispatch","root","updateTurtleCode","commit","getters","rdfstore"],"mappings":"AACA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,IADI;AAEhBC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACVC,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,YAAY,EAAE,EAFJ;AAGVC,MAAAA,UAAU,EAAE;AAHF,KAAP;AAAA,GAFS;AAOhBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,oBADS,gCACaL,KADb,EACoBM,OADpB,EAC6B;AAClCN,MAAAA,KAAK,CAACG,UAAN,GAAmBG,OAAnB;AACH;AAHQ,GAPK;AAYhBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,yBACcR,KADd,EACqB;AAAA,UAAlBS,QAAkB,QAAlBA,QAAkB;AACxBA,MAAAA,QAAQ,CAAC,aAAD,EAAgBT,KAAK,CAACG,UAAtB,EAAkC;AAACO,QAAAA,IAAI,EAAE;AAAP,OAAlC,CAAR;AACH,KAHM;AAIPC,IAAAA,gBAJO,mCAIqBL,OAJrB,EAI8B;AAAA,UAAlBM,MAAkB,SAAlBA,MAAkB;AACjCA,MAAAA,MAAM,CAAC,sBAAD,EAAyBN,OAAzB,CAAN;AACH;AANM,GAZO;AAoBhBO,EAAAA,OAAO,EAAE;AACPZ,IAAAA,KAAK,EAAE,eAAAD,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAV;AAAA,KADL;AAEPC,IAAAA,YAAY,EAAE,sBAAAF,KAAK;AAAA,aAAIA,KAAK,CAACE,YAAV;AAAA,KAFZ;AAGPC,IAAAA,UAAU,EAAE,oBAAAH,KAAK;AAAA,aAAIA,KAAK,CAACG,UAAV;AAAA,KAHV;AAIPW,IAAAA,QAAQ,EAAE,kBAAAd,KAAK;AAAA,aAAIA,KAAK,CAACc,QAAV;AAAA;AAJR;AApBO,CAAlB;AA4BA,eAAe;AAAChB,EAAAA,SAAS,EAATA;AAAD,CAAf","sourcesContent":["\nconst rdfEditor = {\n  namespaced: true, \n  state: () => ({\n      error: false,\n      errorMessage: '', \n      turtleCode: '',\n  }),\n  mutations: {\n    updateThisTurtleCode (state, newCode) {\n        state.turtleCode = newCode\n    }, \n  },\n  actions: {\n    loadRDF ({dispatch}, state) {\n        dispatch('db/addGraph', state.turtleCode, {root: true})\n    },\n    updateTurtleCode ({commit}, newCode) {\n        commit('updateThisTurtleCode', newCode)\n    }\n  }, \n  getters: {\n    error: state => state.error,\n    errorMessage: state => state.errorMessage,\n    turtleCode: state => state.turtleCode, \n    rdfstore: state => state.rdfstore,\n  }\n}\n\nexport default {rdfEditor}"]}]}