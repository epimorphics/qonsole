{"remainingRequest":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js!/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anhelka/Documents/epimorphics/qonsole/src/components/User-Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anhelka/Documents/epimorphics/qonsole/src/components/User-Input.vue","mtime":1599234964709},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/thread-loader/dist/cjs.js","mtime":1596446670016},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/babel-loader/lib/index.js","mtime":1596446669078},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/cache-loader/dist/cjs.js","mtime":1596446669101},{"path":"/home/anhelka/Documents/epimorphics/qonsole/node_modules/vue-loader/lib/index.js","mtime":1596446670053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUvc3RvcmUuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1VzZXJJbnB1dCcsCiAgc3RvcmU6IHN0b3JlLAogIHByb3BzOiBbJ21vZGUnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW5kcG9pbnQ6ICcnLAogICAgICBzZWxlY3RlZEZvcm1hdDogJ1RhYmxlJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsZWFyQ29kZTogZnVuY3Rpb24gY2xlYXJDb2RlKCkgewogICAgICBzd2l0Y2ggKHRoaXMubW9kZSkgewogICAgICAgIGNhc2UgJ3NwYXJxbCc6CiAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc3BhcnFsRWRpdG9yU3RvcmUvdXBkYXRlQ29kZScsICcnKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdyZGZzcGFycWwnOgogICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3VwZGF0ZUNvZGUnLCAnJyk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAndHVydGxlJzoKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdyZGZFZGl0b3JTdG9yZS91cGRhdGVDb2RlJywgJycpOwogICAgICB9CiAgICB9LAogICAgbG9hZFN0b3JlOiBmdW5jdGlvbiBsb2FkU3RvcmUoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdyZGZFZGl0b3JTdG9yZS9sb2FkUkRGJyk7CiAgICB9LAogICAgcXVlcnlFbmRwb2ludDogZnVuY3Rpb24gcXVlcnlFbmRwb2ludCgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3F1ZXJ5RW5kcG9pbnQnKTsKICAgIH0sCiAgICBxdWVyeVN0b3JlOiBmdW5jdGlvbiBxdWVyeVN0b3JlKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc3BhcnFsRWRpdG9yU3RvcmUvcXVlcnlTdG9yZScpOwogICAgfSwKICAgIHVwZGF0ZUVuZHBvaW50OiBmdW5jdGlvbiB1cGRhdGVFbmRwb2ludCgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3VwZGF0ZUVuZHBvaW50JywgdGhpcy5lbmRwb2ludCk7CiAgICB9LAogICAgbG9hZFRleHRGcm9tRmlsZTogZnVuY3Rpb24gbG9hZFRleHRGcm9tRmlsZShldikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGZpbGUgPSBldi50YXJnZXQuZmlsZXNbMF07CiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgc3dpdGNoICh0aGlzLm1vZGUpIHsKICAgICAgICBjYXNlICdzcGFycWwnOgogICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3VwZGF0ZUNvZGUnLCBlLnRhcmdldC5yZXN1bHQpOwogICAgICAgICAgfTsKCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAndHVydGxlJzoKICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdyZGZFZGl0b3JTdG9yZS91cGRhdGVDb2RlJywgZS50YXJnZXQucmVzdWx0KTsKICAgICAgICAgIH07CgogICAgICB9CgogICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsKICAgIH0sCiAgICBzYXZlUXVlcnk6IGZ1bmN0aW9uIHNhdmVRdWVyeSgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3NhdmVRdWVyeScpOwogICAgfSwKICAgIHVwZGF0ZVNlbGVjdGVkT3V0cHV0Rm9ybWF0OiBmdW5jdGlvbiB1cGRhdGVTZWxlY3RlZE91dHB1dEZvcm1hdCgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NwYXJxbEVkaXRvclN0b3JlL3VwZGF0ZU91dHB1dEZvcm1hdCcsIHRoaXMuc2VsZWN0ZWRGb3JtYXQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["User-Input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,KAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA,KAFA;AAGA,EAAA,KAAA,EAAA,CAAA,MAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,cAAA,KAAA,IAAA;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,8BAAA,EAAA,EAAA;AACA;;AACA,aAAA,WAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,8BAAA,EAAA,EAAA;AACA;;AACA,aAAA,QAAA;AACA,eAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,EAAA;AARA;AAUA,KAZA;AAaA,IAAA,SAbA,uBAaA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,wBAAA;AACA,KAfA;AAgBA,IAAA,aAhBA,2BAgBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,iCAAA;AACA,KAlBA;AAmBA,IAAA,UAnBA,wBAmBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,8BAAA;AACA,KArBA;AAsBA,IAAA,cAtBA,4BAsBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,kCAAA,EAAA,KAAA,QAAA;AACA,KAxBA;AAyBA,IAAA,gBAzBA,4BAyBA,EAzBA,EAyBA;AAAA;;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,cAAA,KAAA,IAAA;AACA,aAAA,QAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA;AAAA,mBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,8BAAA,EAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAAA,WAAA;;AACA;;AACA,aAAA,QAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA;AAAA,mBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAAA,WAAA;;AALA;;AAOA,MAAA,MAAA,CAAA,UAAA,CAAA,IAAA;AACA,KApCA;AAqCA,IAAA,SArCA,uBAqCA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,6BAAA;AACA,KAvCA;AAwCA,IAAA,0BAxCA,wCAwCA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,sCAAA,EAAA,KAAA,cAAA;AACA;AA1CA;AAVA,CAAA","sourcesContent":["<template>\n    <div id=\"user-input\">\n        <v-row align=\"center\"\n               justify=\"space-around\"\n               style=\"display:inline-block; margin: 10px;\">\n            <v-btn @click=\"clearCode\"> Clear </v-btn>\n            <v-btn v-show=\"mode=='turtle'\" \n                   @click=\"loadStore\"\n                   :disabled=\"this.$store.getters['rdfEditorStore/turtleCode']==''\"> Load </v-btn>\n\n            <!-- For SPARQL Editor -->\n            <!-- For SPARQL Editor in RDF mode -->\n            <v-btn v-show=\"mode=='rdfsparql'\"\n                   @click=\"queryStore\"\n                   :disabled=\"this.$store.getters['sparqlEditorStore/SPARQLCode']==''\"> Query Store </v-btn>\n\n            <!-- For SPARQL Editor only -->\n            <strong v-show=\"mode=='sparql'\"> Query from: </strong>\n            <input v-show=\"mode=='sparql'\" type=\"text\" id=\"endpoint\" v-model=\"endpoint\" @input=\"updateEndpoint\" style=\"border: 1px solid gray; border-radius:2px;\">\n            <v-btn v-show=\"mode=='sparql'\" \n                   @click=\"queryEndpoint\"\n                   :disabled=\"this.$store.getters['sparqlEditorStore/SPARQLCode']==''\n                   || this.$store.getters['sparqlEditorStore/endpoint']==''\"> Perform Query </v-btn>\n            <v-btn v-show=\"mode=='sparql'\" @click=\"saveQuery\">Save Query</v-btn>\n            \n            <strong v-show=\"mode=='sparql'\"> Output Format: </strong>\n            <select v-show=\"mode=='sparql'\" v-model=\"selectedFormat\"\n                    @change=\"updateSelectedOutputFormat\" style=\"border: 1px solid gray; border-radius: 2px;\">\n                <option value=\"Table\" selected=\"selected\"> Table </option>\n                <option value=\"JSON\"> JSON </option>\n                <option value=\"CSV\"> CSV </option>\n                <option value=\"XML\"> XML </option>\n            </select>\n\n            <br>\n\n            <!-- Load code from local file -->\n            <strong> Import code from local: </strong>\n            <input type=\"file\" @change=\"loadTextFromFile\">\n        </v-row>\n    </div>\n</template>\n<script>\nimport store from '@/store/store.js'\n\nexport default{\n    name: 'UserInput',\n    store: store, \n    props: ['mode'], \n    data () {\n        return {\n            endpoint: '',\n            selectedFormat: 'Table', \n        }\n    }, \n    methods: {\n        clearCode () {\n            switch (this.mode) {\n                case 'sparql':\n                    this.$store.dispatch('sparqlEditorStore/updateCode', '')\n                    break; \n                case 'rdfsparql':\n                    this.$store.dispatch('sparqlEditorStore/updateCode', '')\n                    break; \n                case 'turtle':\n                    this.$store.dispatch('rdfEditorStore/updateCode', '')\n            }\n        },\n        loadStore () {\n            this.$store.dispatch('rdfEditorStore/loadRDF')\n        },\n        queryEndpoint () {\n            this.$store.dispatch('sparqlEditorStore/queryEndpoint')\n        },\n        queryStore () {\n            this.$store.dispatch('sparqlEditorStore/queryStore')\n        }, \n        updateEndpoint () {\n            this.$store.dispatch('sparqlEditorStore/updateEndpoint', this.endpoint)\n        },\n        loadTextFromFile (ev) {\n            const file = ev.target.files[0];\n            const reader = new FileReader();\n            switch (this.mode) {\n                case 'sparql':\n                    reader.onload = e => this.$store.dispatch('sparqlEditorStore/updateCode', e.target.result)\n                    break; \n                case 'turtle':\n                    reader.onload = e => this.$store.dispatch('rdfEditorStore/updateCode', e.target.result)\n            }\n            reader.readAsText(file)\n        },\n        saveQuery () {\n            this.$store.dispatch('sparqlEditorStore/saveQuery')\n        },\n        updateSelectedOutputFormat () {\n            this.$store.dispatch('sparqlEditorStore/updateOutputFormat', this.selectedFormat)\n        }\n    }\n}\n</script>\n<style>\nlabel {\n    font-size: 15px; \n}\n</style>"],"sourceRoot":"src/components"}]}